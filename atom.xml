<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>fangechao6</title>
  
  <subtitle>生活明朗,万物可爱</subtitle>
  <link href="https://fangechao6.github.io/atom.xml" rel="self"/>
  
  <link href="https://fangechao6.github.io/"/>
  <updated>2024-11-22T13:34:11.692Z</updated>
  <id>https://fangechao6.github.io/</id>
  
  <author>
    <name>fangechao6</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://fangechao6.github.io/posts/0.html"/>
    <id>https://fangechao6.github.io/posts/0.html</id>
    <published>2024-11-22T13:34:11.692Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<p>123</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;123&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>base64转MultipartFile</title>
    <link href="https://fangechao6.github.io/posts/e31246ea.html"/>
    <id>https://fangechao6.github.io/posts/e31246ea.html</id>
    <published>2024-08-25T11:18:49.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Base64Util</span> <span class="keyword">implements</span> <span class="title class_">MultipartFile</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">log</span> <span class="operator">=</span> LoggerFactory.getLogger(Base64Util.class);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">byte</span>[] imgContent;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String header;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Base64Util</span><span class="params">(<span class="type">byte</span>[] imgContent, String header)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.imgContent = imgContent;</span><br><span class="line">        <span class="built_in">this</span>.header = header.split(<span class="string">&quot;;&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SecureRandom</span> <span class="variable">secureRandom</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecureRandom</span>();</span><br><span class="line">        <span class="keyword">return</span> System.currentTimeMillis() + (<span class="type">long</span>)secureRandom.nextInt() + <span class="string">&quot;.&quot;</span> + <span class="built_in">this</span>.header.split(<span class="string">&quot;/&quot;</span>)[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getOriginalFilename</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SecureRandom</span> <span class="variable">secureRandom</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecureRandom</span>();</span><br><span class="line">        <span class="keyword">return</span> System.currentTimeMillis() + (<span class="type">long</span>)(secureRandom.nextInt() * <span class="number">1000</span>) + <span class="string">&quot;.&quot;</span> + <span class="built_in">this</span>.header.split(<span class="string">&quot;/&quot;</span>)[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getContentType</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.header.split(<span class="string">&quot;:&quot;</span>)[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.imgContent == <span class="literal">null</span> || <span class="built_in">this</span>.imgContent.length == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getSize</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">long</span>)<span class="built_in">this</span>.imgContent.length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">byte</span>[] getBytes() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.imgContent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> InputStream <span class="title function_">getInputStream</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(<span class="built_in">this</span>.imgContent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transferTo</span><span class="params">(File dest)</span> <span class="keyword">throws</span> IOException, IllegalStateException &#123;</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(dest);</span><br><span class="line">        <span class="type">Throwable</span> <span class="variable">var3</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fileOutputStream.write(<span class="built_in">this</span>.imgContent);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable var12) &#123;</span><br><span class="line">            var3 = var12;</span><br><span class="line">            <span class="keyword">throw</span> var12;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (fileOutputStream != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (var3 != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        fileOutputStream.close();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Throwable var11) &#123;</span><br><span class="line">                        var3.addSuppressed(var11);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    fileOutputStream.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> MultipartFile <span class="title function_">base64ToMultipartFile</span><span class="params">(String base64)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String[] baseStr = base64.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            <span class="type">BASE64Decoder</span> <span class="variable">decoder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BASE64Decoder</span>();</span><br><span class="line">            <span class="type">byte</span>[] b = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">0</span>];</span><br><span class="line">            b = decoder.decodeBuffer(baseStr[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; b.length; ++i) &#123;</span><br><span class="line">                <span class="keyword">if</span> (b[i] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                    b[i] = (<span class="type">byte</span>)(b[i] + <span class="number">256</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Base64Util</span>(b, baseStr[<span class="number">0</span>]);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException var5) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;base64转MultipartFile出错了&quot;</span>);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BaseException</span>(CafManagerStatus.BASE64_ERROR);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>easyExcel合并单元格导出</title>
    <link href="https://fangechao6.github.io/posts/2f9c8e6b.html"/>
    <id>https://fangechao6.github.io/posts/2f9c8e6b.html</id>
    <published>2024-03-29T11:48:11.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今天遇到一个需求需要合并单元格导出，琢磨了五个小时-试用了多种方案，最后使用这种不完美的方案，想要的方案应该是动态合并-只标记需要合并的列并指定不重复-id列名类似于mybatis-resultMap那种方式。以后有机会再优化下。"><a href="#今天遇到一个需求需要合并单元格导出，琢磨了五个小时-试用了多种方案，最后使用这种不完美的方案，想要的方案应该是动态合并-只标记需要合并的列并指定不重复-id列名类似于mybatis-resultMap那种方式。以后有机会再优化下。" class="headerlink" title="今天遇到一个需求需要合并单元格导出，琢磨了五个小时,试用了多种方案，最后使用这种不完美的方案，想要的方案应该是动态合并 只标记需要合并的列并指定不重复 id列名类似于mybatis resultMap那种方式。以后有机会再优化下。"></a>今天遇到一个需求需要合并单元格导出，琢磨了五个小时,试用了多种方案，最后使用这种不完美的方案，想要的方案应该是动态合并 只标记需要合并的列并指定不重复 id列名类似于mybatis resultMap那种方式。以后有机会再优化下。</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">export</span><span class="params">(CompetitionRegistrationDTO competitionRegistrationDTO, HttpServletResponse response)</span> &#123;</span><br><span class="line">    </span><br><span class="line">    List&lt;ExcelCompetitionRegistrationTemplate&gt; excelCompetitionRegistrationTemplateList = <span class="built_in">this</span>.competitionRegistrationMapper.exportCompetitionRegistrationList(competitionRegistrationDTO);</span><br><span class="line">    excelCompetitionRegistrationTemplateList.forEach(excelCompetitionRegistrationTemplate -&gt; &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">roleName</span> <span class="operator">=</span> excelCompetitionRegistrationTemplate.getRoleName();</span><br><span class="line">        excelCompetitionRegistrationTemplate.setRoleName(CompetitionTeamRole.getDescByType(Integer.parseInt(roleName)));</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 列头占一行</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">lineCount</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// ExcelCompetitionRegistrationTemplate类中的需要合并列的索引</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span>[] mergeColumnIndex = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    response.setContentType(<span class="string">&quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8&quot;</span>);</span><br><span class="line">    response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + encodedFileName);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> (<span class="type">ServletOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> response.getOutputStream()) &#123;</span><br><span class="line">  </span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="string">&quot;比赛报名信息导出.xlsx&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">encodedFileName</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(fileName.getBytes(StandardCharsets.UTF_8), StandardCharsets.ISO_8859_1);</span><br><span class="line"></span><br><span class="line">        List&lt;CellRangeAddress&gt; rangeCellList = createCellRange(excelCompetitionRegistrationTemplateList, mergeColumnIndex, lineCount);</span><br><span class="line"></span><br><span class="line">        EasyExcel.write(outputStream).head(ExcelCompetitionRegistrationTemplate.class).registerWriteHandler(<span class="keyword">new</span> <span class="title class_">CompetitionRegistrationTeamExport</span>(rangeCellList)).sheet(<span class="string">&quot;资金流入预算导出模板&quot;</span>).doWrite(excelCompetitionRegistrationTemplateList);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> List&lt;CellRangeAddress&gt; <span class="title function_">createCellRange</span><span class="params">(List&lt;ExcelCompetitionRegistrationTemplate&gt; detailList, <span class="type">int</span>[] mergeColumnIndex, <span class="type">int</span> lineCount)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (detailList.isEmpty()) &#123;</span><br><span class="line">        <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    List&lt;CellRangeAddress&gt; rangeCellList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 competitionTeamVOList 生成合并区域，按手机号分组</span></span><br><span class="line">    Map&lt;String, Long&gt; groupMap = detailList.stream()</span><br><span class="line">            .collect(Collectors.groupingBy(ExcelCompetitionRegistrationTemplate::getPhone, Collectors.counting()));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Map.Entry&lt;String, Long&gt; entry : groupMap.entrySet()) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> entry.getValue().intValue();</span><br><span class="line">        <span class="type">int</span> <span class="variable">startRowIndex</span> <span class="operator">=</span> lineCount;</span><br><span class="line">        <span class="comment">// 如合并第2到4行，共3行，行索引从1到3</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">endRowIndex</span> <span class="operator">=</span> lineCount + count - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (count &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> columnIndex : mergeColumnIndex) &#123;</span><br><span class="line">                rangeCellList.add(<span class="keyword">new</span> <span class="title class_">CellRangeAddress</span>(startRowIndex, endRowIndex, columnIndex, columnIndex));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        lineCount += count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> rangeCellList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="新建类-CompetitionRegistrationTeamExport"><a href="#新建类-CompetitionRegistrationTeamExport" class="headerlink" title="新建类 CompetitionRegistrationTeamExport"></a>新建类 CompetitionRegistrationTeamExport</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CompetitionRegistrationTeamExport</span> <span class="keyword">implements</span> <span class="title class_">SheetWriteHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;CellRangeAddress&gt; rangeCellList;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CompetitionRegistrationTeamExport</span><span class="params">(List&lt;CellRangeAddress&gt; rangeCellList)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.rangeCellList = (rangeCellList == <span class="literal">null</span>) ? Collections.emptyList() : rangeCellList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterSheetCreate</span><span class="params">(WriteWorkbookHolder writeWorkbookHolder, WriteSheetHolder writeSheetHolder)</span> &#123;</span><br><span class="line">        <span class="type">Sheet</span> <span class="variable">sheet</span> <span class="operator">=</span> writeSheetHolder.getSheet();</span><br><span class="line">        <span class="keyword">for</span> (CellRangeAddress cellRangeAddress : <span class="built_in">this</span>.rangeCellList) &#123;</span><br><span class="line">            sheet.addMergedRegionUnsafe(cellRangeAddress);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeSheetCreate</span><span class="params">(WriteWorkbookHolder writeWorkbookHolder, WriteSheetHolder writeSheetHolder)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;今天遇到一个需求需要合并单元格导出，琢磨了五个小时-试用了多种方案，最后使用这种不完美的方案，想要的方案应该是动态合并-只标记需要合并的列并指定不重复-id列名类似于mybatis-resultMap那种方式。以后有机会再优化下。&quot;&gt;&lt;a href=&quot;#今天遇到一</summary>
      
    
    
    
    <category term="java" scheme="https://fangechao6.github.io/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>threadLocal工具类</title>
    <link href="https://fangechao6.github.io/posts/b422b938.html"/>
    <id>https://fangechao6.github.io/posts/b422b938.html</id>
    <published>2024-03-29T11:48:11.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadLocalUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;Map&lt;String, Object&gt;&gt; THREAD_LOCAL =</span><br><span class="line">                ThreadLocal.withInitial(() -&gt; <span class="keyword">new</span> <span class="title class_">ConcurrentHashMap</span>&lt;&gt;(<span class="number">16</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 获取到ThreadLocal中值</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> ThreadLocal存储的是Map</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title function_">getThreadLocal</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> THREAD_LOCAL.get();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 从ThreadLocal中的Map获取值</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> key Map中的key</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> &lt;T&gt; Map中的value的类型</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> Map中的value值 可能为空</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">get</span><span class="params">(String key)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> get(key, <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 从ThreadLocal中的Map获取值</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> key          Map中的key</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> defaultValue Map中的value的为null 是 的默认值</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> &lt;T&gt;          Map中的value的类型</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> Map中的value值 可能为空</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">get</span><span class="params">(String key, T defaultValue)</span> &#123;</span><br><span class="line">            Map&lt;String, Object&gt; map = THREAD_LOCAL.get();</span><br><span class="line">            <span class="keyword">if</span> (MapUtils.isEmpty(map)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> (T) Optional.ofNullable(map.get(key)).orElse(defaultValue);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * ThreadLocal中的Map设置值</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> key   Map中的key</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> value Map中的value</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">set</span><span class="params">(String key, Object value)</span> &#123;</span><br><span class="line">            Map&lt;String, Object&gt; map = THREAD_LOCAL.get();</span><br><span class="line">            map.put(key, value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * ThreadLocal中的Map 添加Map</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> keyValueMap 参数map</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">set</span><span class="params">(Map&lt;String, Object&gt; keyValueMap)</span> &#123;</span><br><span class="line">            Map&lt;String, Object&gt; map = THREAD_LOCAL.get();</span><br><span class="line">            map.putAll(keyValueMap);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 删除ThreadLocal中的Map 中的value</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> key Map中的key</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(String key)</span> &#123;</span><br><span class="line">            Map&lt;String, Object&gt; map = THREAD_LOCAL.get();</span><br><span class="line">            <span class="keyword">if</span> (MapUtils.isEmpty(map)) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            map.remove(key);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 删除ThreadLocal中的Map</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">remove</span><span class="params">()</span> &#123;</span><br><span class="line">            THREAD_LOCAL.remove();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 从ThreadLocal中的Map获取值 根据可key的前缀</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> prefix key 的前缀</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> &lt;T&gt;    Map中的value的类型</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> 符合条件的Map</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Map&lt;String, T&gt; <span class="title function_">fetchVarsByPrefix</span><span class="params">(String prefix)</span> &#123;</span><br><span class="line">            Map&lt;String, T&gt; vars = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isBlank(prefix)) &#123;</span><br><span class="line">                <span class="keyword">return</span> vars;</span><br><span class="line">            &#125;</span><br><span class="line">            Map&lt;String, Object&gt; map = THREAD_LOCAL.get();</span><br><span class="line">            <span class="keyword">if</span> (MapUtils.isEmpty(map)) &#123;</span><br><span class="line">                <span class="keyword">return</span> vars;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> map.entrySet().stream().filter(test -&gt; test.getKey().startsWith(prefix))</span><br><span class="line">                    .collect(Collectors.toMap(Map.Entry::getKey, time -&gt; (T) time.getValue()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 删除ThreadLocal中的Map 中的Value  按 Map中的Key的前缀</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> prefix Map中的Key的前缀</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">deleteVarsByPrefix</span><span class="params">(String prefix)</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isBlank(prefix)) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Map&lt;String, Object&gt; map = THREAD_LOCAL.get();</span><br><span class="line">            <span class="keyword">if</span> (MapUtils.isEmpty(map)) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            map.keySet().stream().filter(o -&gt; o.startsWith(prefix)).collect(Collectors.toSet()).forEach(map::remove);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    <category term="javaUtils" scheme="https://fangechao6.github.io/categories/javaUtils/"/>
    
    
  </entry>
  
  <entry>
    <title>uni-app多文件上传</title>
    <link href="https://fangechao6.github.io/posts/a9704e29.html"/>
    <id>https://fangechao6.github.io/posts/a9704e29.html</id>
    <published>2024-03-26T10:00:19.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>压缩包处理</title>
    <link href="https://fangechao6.github.io/posts/d4e669f.html"/>
    <id>https://fangechao6.github.io/posts/d4e669f.html</id>
    <published>2024-03-13T20:34:09.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> HashMap&lt;String, InputStream&gt; <span class="title function_">readZipToInputStreamList</span><span class="params">(InputStream inputStream, String suffixType)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"><span class="comment">//        List&lt;InputStream&gt; list = new ArrayList&lt;&gt;();</span></span><br><span class="line">        HashMap&lt;String, InputStream&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取文件流</span></span><br><span class="line"><span class="comment">//        InputStream inputStream = FileUtil.getInputStream(zipFile);</span></span><br><span class="line">        <span class="comment">//转化文件流为压缩文件流</span></span><br><span class="line">        <span class="type">ZipInputStream</span> <span class="variable">zipInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ZipInputStream</span>(inputStream, Charset.forName(<span class="string">&quot;gbk&quot;</span>));</span><br><span class="line">        ZipEntry zipEntry;</span><br><span class="line">        <span class="keyword">while</span> ((zipEntry = zipInputStream.getNextEntry()) != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//如果文件后缀条件不为空且后缀条件不符则跳过文件读取</span></span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isNotBlank(suffixType) &amp;&amp; !zipEntry.getName().endsWith(suffixType)) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="comment">//文件读取处理</span></span><br><span class="line">            <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> len;</span><br><span class="line">            <span class="type">ByteArrayOutputStream</span> <span class="variable">byteStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">            <span class="keyword">while</span> ((len = zipInputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                byteStream.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 关闭流</span></span><br><span class="line">            byteStream.close();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//读取的文件转为所需的流添加到集合中</span></span><br><span class="line">            <span class="type">ByteArrayInputStream</span> <span class="variable">byteArrayInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(byteStream.toByteArray());</span><br><span class="line"><span class="comment">//            list.add(byteArrayInputStream);</span></span><br><span class="line">            map.put(zipEntry.getName(), byteArrayInputStream);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    <category term="javaUtils" scheme="https://fangechao6.github.io/categories/javaUtils/"/>
    
    
  </entry>
  
  <entry>
    <title>Java添加图片水印</title>
    <link href="https://fangechao6.github.io/posts/dd6a6641.html"/>
    <id>https://fangechao6.github.io/posts/dd6a6641.html</id>
    <published>2024-03-04T13:35:29.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WatermarkUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据传入水印文字长度自动调整水印宽高，需要添加换行符\n</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> watermarkText </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> originalImage</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BufferedImage <span class="title function_">genWatermark</span><span class="params">(String watermarkText,BufferedImage originalImage)</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">Graphics2D</span> <span class="variable">graphics</span> <span class="operator">=</span> originalImage.createGraphics();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置水印字体和颜色</span></span><br><span class="line">            <span class="type">Font</span> <span class="variable">font</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;宋体&quot;</span>, Font.BOLD, <span class="number">20</span>);</span><br><span class="line">            graphics.setFont(font);</span><br><span class="line">            graphics.setColor(Color.WHITE);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取水印文字的行数和每行文字的个数</span></span><br><span class="line">            String[] lines = watermarkText.split(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">numberOfLines</span> <span class="operator">=</span> lines.length;</span><br><span class="line">            <span class="type">String</span> <span class="variable">maxString</span> <span class="operator">=</span> Arrays.stream(lines)</span><br><span class="line">                    .max(Comparator.comparingInt(String::length))</span><br><span class="line">                    .orElse(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 水印文字的宽度和高度</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">watermarkWidth</span> <span class="operator">=</span> graphics.getFontMetrics().stringWidth(maxString);</span><br><span class="line">            <span class="type">int</span> <span class="variable">watermarkHeight</span> <span class="operator">=</span> graphics.getFontMetrics().getHeight();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置透明度</span></span><br><span class="line">            <span class="type">float</span> <span class="variable">alpha</span> <span class="operator">=</span> <span class="number">0.5f</span>; <span class="comment">// 透明度范围：0.0f（完全透明）到1.0f（完全不透明）</span></span><br><span class="line">            graphics.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, alpha));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制黑色背景</span></span><br><span class="line">            graphics.setColor(Color.BLACK);</span><br><span class="line">            <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">rectWidth</span> <span class="operator">=</span> watermarkWidth + <span class="number">10</span>; <span class="comment">// 背景宽度</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">rectHeight</span> <span class="operator">=</span> watermarkHeight * numberOfLines + <span class="number">10</span>; <span class="comment">// 背景高度</span></span><br><span class="line">            graphics.fillRect(x, y, rectWidth, rectHeight);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制白色文字</span></span><br><span class="line">            graphics.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, <span class="number">1.0f</span>));</span><br><span class="line">            y += watermarkHeight;</span><br><span class="line">            graphics.setColor(Color.WHITE);</span><br><span class="line">            <span class="keyword">for</span> (String line : lines) &#123;</span><br><span class="line">                graphics.drawString(line, x + <span class="number">10</span>, y);</span><br><span class="line">                y += watermarkHeight; <span class="comment">// 每行增加水印文字的高度</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            graphics.dispose();</span><br><span class="line">            <span class="keyword">return</span> originalImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    
    <category term="Java" scheme="https://fangechao6.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java生成二维码</title>
    <link href="https://fangechao6.github.io/posts/b78651e0.html"/>
    <id>https://fangechao6.github.io/posts/b78651e0.html</id>
    <published>2024-02-29T10:37:52.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 二维码宽高</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">QR_CODE_WH</span> <span class="operator">=</span> <span class="number">500</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 左右间距</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">LEFT_RIGHT_EMPTY</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用示例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"> <span class="comment">/*   public static void main(String[] args) &#123;</span></span><br><span class="line"><span class="comment">        // 生成图片</span></span><br><span class="line"><span class="comment">        BufferedImage image = generateTextImage(&quot;规划局&quot;,</span></span><br><span class="line"><span class="comment">                &quot;fasfds&quot;, &quot;AAA 高科技&quot;, &quot;CCC 黑科技&quot;);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        // 保存图片到文件</span></span><br><span class="line"><span class="comment">        try &#123;</span></span><br><span class="line"><span class="comment">            File outputFile = new File(&quot;output.png&quot;);</span></span><br><span class="line"><span class="comment">            ImageIO.write(image, &quot;png&quot;, outputFile);</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;Image saved to: &quot; + outputFile.getAbsolutePath());</span></span><br><span class="line"><span class="comment">        &#125; catch (IOException e) &#123;</span></span><br><span class="line"><span class="comment">//            log.error(e.getMessage());</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成订单二维码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> topText 顶部文字 公司</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> qrCodeText 二维码文字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> middleText 底部文字 发货地 空格分割颜色</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bottomText 底部文字 收货地 空格分割颜色</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 图片 BufferedImage 对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BufferedImage <span class="title function_">generateTextImage</span><span class="params">(String topText, String qrCodeText, String middleText, String bottomText)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> calculateImageHeight(topText, middleText, bottomText);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建 BufferedImage</span></span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedImage</span>(QR_CODE_WH, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        <span class="type">Graphics2D</span> <span class="variable">g2d</span> <span class="operator">=</span> image.createGraphics();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置背景色为白色</span></span><br><span class="line">        g2d.setColor(Color.WHITE);</span><br><span class="line">        g2d.fillRect(<span class="number">0</span>, <span class="number">0</span>, QR_CODE_WH, height);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绘制顶部文字</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">qrCodeY</span> <span class="operator">=</span> drawTopText(topText, g2d) + <span class="number">10</span>; <span class="comment">// 上边的文字高度 + 40 px 间距</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算二维码位置</span></span><br><span class="line">        <span class="comment">// 在中部绘制二维码（假设 QRCodeGenerator 类中有生成二维码的方法）</span></span><br><span class="line">        drawQRCode(g2d, qrCodeText, qrCodeY);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算天蓝色文本位置</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">blueTextY</span> <span class="operator">=</span> qrCodeY + QR_CODE_WH; <span class="comment">// 二维码的底部 + 40 px 间距</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在中部绘制天蓝色文本</span></span><br><span class="line">        g2d.setColor(Color.CYAN);</span><br><span class="line">        <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> drawWrappedText(g2d, middleText, blueTextY);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算粉红色文本位置</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">pinkTextY</span> <span class="operator">=</span> y + <span class="number">40</span>; <span class="comment">// 天蓝色文本的底部 + 20 px 间距</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在底部绘制粉红色文本</span></span><br><span class="line">        g2d.setColor(Color.PINK);</span><br><span class="line">        drawWrappedText(g2d, bottomText, pinkTextY);</span><br><span class="line"></span><br><span class="line">        g2d.dispose();</span><br><span class="line">        <span class="keyword">return</span> image;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">drawTopText</span><span class="params">(String topText, Graphics2D g2d)</span> &#123;</span><br><span class="line">        <span class="comment">// 设置字体和颜色</span></span><br><span class="line">        <span class="type">Font</span> <span class="variable">font</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;宋体&quot;</span>, Font.BOLD, <span class="number">30</span>); <span class="comment">// 指定中文字体</span></span><br><span class="line">        g2d.setFont(font);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算顶部文本的位置</span></span><br><span class="line">        <span class="type">FontMetrics</span> <span class="variable">metrics</span> <span class="operator">=</span> g2d.getFontMetrics(font);</span><br><span class="line">        <span class="type">int</span> <span class="variable">topTextX</span> <span class="operator">=</span> LEFT_RIGHT_EMPTY;</span><br><span class="line">        <span class="type">int</span> <span class="variable">topTextY</span> <span class="operator">=</span> LEFT_RIGHT_EMPTY + <span class="number">20</span> + metrics.getAscent();</span><br><span class="line">        <span class="type">int</span> <span class="variable">lineHeight</span> <span class="operator">=</span> metrics.getHeight();</span><br><span class="line">        <span class="comment">// 在顶部绘制黑色文本</span></span><br><span class="line">        g2d.setColor(Color.BLACK);</span><br><span class="line"></span><br><span class="line">        String[] words = topText.split(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String word : words) &#123;</span><br><span class="line">            <span class="comment">// 计算单词的宽度</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">wordWidth</span> <span class="operator">=</span> metrics.stringWidth(word);</span><br><span class="line">            <span class="comment">// 如果当前行文本加上当前单词超过图片宽度，换行</span></span><br><span class="line">            <span class="keyword">if</span> (topTextX + wordWidth &gt; QR_CODE_WH - LEFT_RIGHT_EMPTY) &#123;</span><br><span class="line">                topTextX = LEFT_RIGHT_EMPTY; <span class="comment">// 回到初始 X 坐标</span></span><br><span class="line">                topTextY += lineHeight; <span class="comment">// 换行</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 在指定位置绘制文本</span></span><br><span class="line">            g2d.drawString(word, topTextX, topTextY);</span><br><span class="line">            <span class="comment">// 更新 X 坐标，以便绘制下一个单词</span></span><br><span class="line">            topTextX += wordWidth; <span class="comment">// 不添加间距，以免在单词之间产生额外间距</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> topTextY;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">drawQRCode</span><span class="params">(Graphics2D g2d, String qrCodeText, <span class="type">int</span> qrCodeY)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 使用 ZXing 生成二维码</span></span><br><span class="line">            Map&lt;EncodeHintType, Object&gt; hints = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            hints.put(EncodeHintType.CHARACTER_SET, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            <span class="type">Writer</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QRCodeWriter</span>();</span><br><span class="line">            <span class="type">BitMatrix</span> <span class="variable">bitMatrix</span> <span class="operator">=</span> writer.encode(qrCodeText, BarcodeFormat.QR_CODE, QR_CODE_WH, QR_CODE_WH, hints);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 将 BitMatrix 绘制到 g2d 上</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>; x &lt; bitMatrix.getWidth(); x++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">0</span>; y &lt; bitMatrix.getHeight(); y++) &#123;</span><br><span class="line">                    g2d.setColor(bitMatrix.get(x, y) ? Color.BLACK : Color.WHITE);</span><br><span class="line">                    g2d.fillRect(x, y + qrCodeY, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (WriterException e) &#123;</span><br><span class="line"><span class="comment">//            log.error(e.getMessage());</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">drawWrappedText</span><span class="params">(Graphics2D g2d, String text, <span class="type">int</span> startY)</span> &#123;</span><br><span class="line">        <span class="comment">// 设置字体和颜色</span></span><br><span class="line">        <span class="type">Font</span> <span class="variable">font</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">20</span>); <span class="comment">// 指定中文字体</span></span><br><span class="line">        g2d.setFont(font);</span><br><span class="line"></span><br><span class="line">        <span class="type">FontMetrics</span> <span class="variable">metrics</span> <span class="operator">=</span> g2d.getFontMetrics(g2d.getFont());</span><br><span class="line">        <span class="type">int</span> <span class="variable">lineHeight</span> <span class="operator">=</span> metrics.getHeight();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始 X 坐标</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> LEFT_RIGHT_EMPTY;</span><br><span class="line">        <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> startY;</span><br><span class="line"></span><br><span class="line">        String[] words = text.split(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String word : words) &#123;</span><br><span class="line">            <span class="comment">// 计算单词的宽度</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">wordWidth</span> <span class="operator">=</span> metrics.stringWidth(word);</span><br><span class="line">            <span class="comment">// 遇到空格改为黑色</span></span><br><span class="line">            <span class="keyword">if</span> (word.equals(<span class="string">&quot; &quot;</span>)) &#123;</span><br><span class="line">                g2d.setColor(Color.darkGray);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 如果当前行文本加上当前单词超过图片宽度，换行</span></span><br><span class="line">            <span class="keyword">if</span> (x + wordWidth &gt; QR_CODE_WH - LEFT_RIGHT_EMPTY) &#123;</span><br><span class="line">                x = LEFT_RIGHT_EMPTY; <span class="comment">// 回到初始 X 坐标</span></span><br><span class="line">                y += lineHeight; <span class="comment">// 换行</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 在指定位置绘制文本</span></span><br><span class="line">            g2d.drawString(word, x, y);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 更新 X 坐标，以便绘制下一个单词</span></span><br><span class="line">            x += wordWidth; <span class="comment">// 不添加间距，以免在单词之间产生额外间距</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">calculateImageHeight</span><span class="params">(String topText, String middleText, String bottomText)</span> &#123;</span><br><span class="line">        <span class="type">FontMetrics</span> <span class="variable">fontMetrics</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedImage</span>(<span class="number">1</span>, <span class="number">1</span>, BufferedImage.TYPE_INT_RGB).createGraphics().getFontMetrics(<span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;宋体&quot;</span>, Font.BOLD, <span class="number">30</span>));</span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> calculateWrappedTextHeight(topText, fontMetrics); <span class="comment">// 初始高度，用于顶部文本</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算二维码的高度</span></span><br><span class="line">        height += <span class="number">40</span>; <span class="comment">// 二维码上方的间距</span></span><br><span class="line">        height += QR_CODE_WH; <span class="comment">// 二维码的高度</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算天蓝色文本的高度</span></span><br><span class="line">        height += <span class="number">20</span>; <span class="comment">// 天蓝色文本上方的间距</span></span><br><span class="line">        height += calculateWrappedTextHeight(middleText, fontMetrics);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算粉红色文本的高度</span></span><br><span class="line">        height += <span class="number">20</span>; <span class="comment">// 粉红色文本上方的间距</span></span><br><span class="line">        height += calculateWrappedTextHeight(bottomText, fontMetrics);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">calculateWrappedTextHeight</span><span class="params">(String text, FontMetrics fontMetrics)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">lineHeight</span> <span class="operator">=</span> fontMetrics.getHeight();</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> LEFT_RIGHT_EMPTY;</span><br><span class="line">        <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String word : text.split(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">wordWidth</span> <span class="operator">=</span> fontMetrics.stringWidth(word + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (x + wordWidth &gt; QR_CODE_WH) &#123;</span><br><span class="line">                x = LEFT_RIGHT_EMPTY;</span><br><span class="line">                y += lineHeight;</span><br><span class="line">            &#125;</span><br><span class="line">            x += wordWidth;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> y + lineHeight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] bufferedImageToBytes(BufferedImage bufferedImage) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        ImageIO.write(bufferedImage, <span class="string">&quot;jpg&quot;</span>, baos); <span class="comment">// 你可以根据需要选择不同的图像格式，这里选择了 PNG 格式</span></span><br><span class="line">        <span class="keyword">return</span> baos.toByteArray();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    <category term="java" scheme="https://fangechao6.github.io/categories/java/"/>
    
    
    <category term="Java" scheme="https://fangechao6.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>多表分页查询</title>
    <link href="https://fangechao6.github.io/posts/1148aeae.html"/>
    <id>https://fangechao6.github.io/posts/1148aeae.html</id>
    <published>2023-10-23T14:17:00.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<h1 id="extends-MPJBaseService-selectJoinListPage"><a href="#extends-MPJBaseService-selectJoinListPage" class="headerlink" title="extends MPJBaseService selectJoinListPage"></a>extends MPJBaseService<Object> selectJoinListPage</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;extends-MPJBaseService-selectJoinListPage&quot;&gt;&lt;a href=&quot;#extends-MPJBaseService-selectJoinListPage&quot; class=&quot;headerlink&quot; title=&quot;extends MP</summary>
      
    
    
    
    <category term="mybatisPlus" scheme="https://fangechao6.github.io/categories/mybatisPlus/"/>
    
    
    <category term="数据库" scheme="https://fangechao6.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="mybatisPlus" scheme="https://fangechao6.github.io/tags/mybatisPlus/"/>
    
  </entry>
  
  <entry>
    <title>vue脚手架</title>
    <link href="https://fangechao6.github.io/posts/33225426.html"/>
    <id>https://fangechao6.github.io/posts/33225426.html</id>
    <published>2023-08-06T13:49:20.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<h2 id="脚手架文件结构"><a href="#脚手架文件结构" class="headerlink" title="脚手架文件结构"></a>脚手架文件结构</h2><pre><code>├── node_modules ├── public│   ├── favicon.ico: 页签图标│   └── index.html: 主页面├── src│   ├── assets: 存放静态资源│   │   └── logo.png│   │── component: 存放组件│   │   └── HelloWorld.vue│   │── App.vue: 汇总所有组件│   │── main.js: 入口文件├── .gitignore: git版本管制忽略的配置├── babel.config.js: babel的配置文件├── package.json: 应用包配置文件 ├── README.md: 应用描述文件├── package-lock.json：包版本控制文件</code></pre><h2 id="关于不同版本的Vue"><a href="#关于不同版本的Vue" class="headerlink" title="关于不同版本的Vue"></a>关于不同版本的Vue</h2><ol><li>vue.js与vue.runtime.xxx.js的区别：<ol><li>vue.js是完整版的Vue，包含：核心功能 + 模板解析器。</li><li>vue.runtime.xxx.js是运行版的Vue，只包含：核心功能；没有模板解析器。</li></ol></li><li>因为vue.runtime.xxx.js没有模板解析器，所以不能使用template这个配置项，需要使用render函数接收到的createElement函数去指定具体内容。</li></ol><h2 id="vue-config-js配置文件"><a href="#vue-config-js配置文件" class="headerlink" title="vue.config.js配置文件"></a>vue.config.js配置文件</h2><ol><li>使用vue inspect &gt; output.js可以查看到Vue脚手架的默认配置。</li><li>使用vue.config.js可以对脚手架进行个性化定制，详情见：<a href="https://cli.vuejs.org/zh">https://cli.vuejs.org/zh</a></li></ol><h2 id="ref属性"><a href="#ref属性" class="headerlink" title="ref属性"></a>ref属性</h2><ol><li>被用来给元素或子组件注册引用信息（id的替代者）</li><li>应用在html标签上获取的是真实DOM元素，应用在组件标签上是组件实例对象（vc）</li><li>使用方式：<ol><li>打标识：<code>&lt;h1 ref=&quot;xxx&quot;&gt;.....&lt;/h1&gt;</code> 或 <code>&lt;School ref=&quot;xxx&quot;&gt;&lt;/School&gt;</code></li><li>获取：<code>this.$refs.xxx</code></li></ol></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;脚手架文件结构&quot;&gt;&lt;a href=&quot;#脚手架文件结构&quot; class=&quot;headerlink&quot; title=&quot;脚手架文件结构&quot;&gt;&lt;/a&gt;脚手架文件结构&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;├── node_modules 
├── public
│   ├── favic</summary>
      
    
    
    
    <category term="vue" scheme="https://fangechao6.github.io/categories/vue/"/>
    
    
    <category term="vue" scheme="https://fangechao6.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue组件化编程</title>
    <link href="https://fangechao6.github.io/posts/405bf84.html"/>
    <id>https://fangechao6.github.io/posts/405bf84.html</id>
    <published>2023-08-03T11:48:36.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<h1 id="非单文件组件："><a href="#非单文件组件：" class="headerlink" title="非单文件组件："></a>非单文件组件：</h1><p>一个文件中包含n个组件</p><h1 id="单文件组件："><a href="#单文件组件：" class="headerlink" title="单文件组件："></a>单文件组件：</h1><p>一个文件中只包含有1个组件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;非单文件组件：&quot;&gt;&lt;a href=&quot;#非单文件组件：&quot; class=&quot;headerlink&quot; title=&quot;非单文件组件：&quot;&gt;&lt;/a&gt;非单文件组件：&lt;/h1&gt;&lt;p&gt;一个文件中包含n个组件&lt;/p&gt;
&lt;h1 id=&quot;单文件组件：&quot;&gt;&lt;a href=&quot;#单文件组件：&quot; </summary>
      
    
    
    
    <category term="vue" scheme="https://fangechao6.github.io/categories/vue/"/>
    
    
    <category term="vue" scheme="https://fangechao6.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue生命周期</title>
    <link href="https://fangechao6.github.io/posts/b340e08.html"/>
    <id>https://fangechao6.github.io/posts/b340e08.html</id>
    <published>2023-08-03T11:02:18.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<h1 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h1><p><img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png" alt=""></p><h1 id="创建阶段："><a href="#创建阶段：" class="headerlink" title="创建阶段："></a>创建阶段：</h1><ul><li>beforeCreate：在实例初始化之后，数据观测和事件配置之前调用。此时data和methods等还未初始化。</li><li>created：在实例创建完成后立即调用。数据已经初始化，可以在这个阶段对数据进行一些处理。</li></ul><h1 id="挂载阶段："><a href="#挂载阶段：" class="headerlink" title="挂载阶段："></a>挂载阶段：</h1><ul><li>beforeMount：在挂载开始之前被调用。此时模板编译已经完成，但还未把生成的DOM插入页面。</li><li>mounted：在挂载完成后调用。此时组件已经在DOM中插入，可以访问DOM元素，执行网络请求，以及其他一些需要在组件挂载后进行的操作。</li></ul><h1 id="更新阶段："><a href="#更新阶段：" class="headerlink" title="更新阶段："></a>更新阶段：</h1><ul><li>beforeUpdate：在数据更新之前调用，发生在虚拟DOM重新渲染和打补丁之前。可以用来在更新之前访问现有的DOM状态。</li><li>updated：在数据更新之后调用，虚拟DOM重新渲染和打补丁完成后触发。可以执行与更新后的DOM进行交互的任务。</li></ul><h1 id="销毁阶段："><a href="#销毁阶段：" class="headerlink" title="销毁阶段："></a>销毁阶段：</h1><ul><li>beforeDestroy：在实例销毁之前调用。可以在这里进行一些清理工作，如取消定时器、解绑全局事件等。</li><li>destroyed：在实例销毁后调用。此时Vue实例及其所有的事件监听器和子组件都已被销毁。</li></ul><h1 id="常用的生命周期钩子："><a href="#常用的生命周期钩子：" class="headerlink" title="常用的生命周期钩子："></a>常用的生命周期钩子：</h1><ol><li>mounted：发送ajax请求、启动定时器、绑定自定义事件、订阅消息等【初始化操作】。</li><li>beforeDestroy：清除定时器、解绑自定义事件、取消订阅小蝶等【收尾工作】</li></ol><h1 id="关于销毁Vue实例"><a href="#关于销毁Vue实例" class="headerlink" title="关于销毁Vue实例"></a>关于销毁Vue实例</h1><ol><li>销毁后借助Vue开发者工具看不到任何信息</li><li>销毁后自定义事件会失效、但原生DOM事件依然有效</li><li>一般不会在beforeDestroy中操作数据，因为即使操作数据，也不会在触发数据更新流程了</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;流程图&quot;&gt;&lt;a href=&quot;#流程图&quot; class=&quot;headerlink&quot; title=&quot;流程图&quot;&gt;&lt;/a&gt;流程图&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.c</summary>
      
    
    
    
    <category term="vue" scheme="https://fangechao6.github.io/categories/vue/"/>
    
    
    <category term="vue" scheme="https://fangechao6.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue中的指令</title>
    <link href="https://fangechao6.github.io/posts/5cb25666.html"/>
    <id>https://fangechao6.github.io/posts/5cb25666.html</id>
    <published>2023-08-02T14:10:39.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue-中的指令"><a href="#Vue-中的指令" class="headerlink" title="Vue 中的指令"></a>Vue 中的指令</h1><p>指令是 Vue.js 中用于操作 DOM 的特殊属性。它们以 v- 前缀作为标识，可以用于向模板中添加交互和动态功能。</p><h2 id="v-bind-指令"><a href="#v-bind-指令" class="headerlink" title="v-bind 指令"></a>v-bind 指令</h2><p>v-bind 指令用于绑定元素属性和 Vue 实例的数据。它可以实现动态更新元素属性的值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 将 message 绑定到元素的 title 属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;message&quot;</span>&gt;</span>悬停在我上面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 缩写形式，等同于上面的写法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">:title</span>=<span class="string">&quot;message&quot;</span>&gt;</span>悬停在我上面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-on-指令"><a href="#v-on-指令" class="headerlink" title="v-on 指令"></a>v-on 指令</h2><p>v-on 指令用于监听 DOM 事件，并在事件触发时执行相应的方法。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在点击按钮时执行 handleClick 方法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>点击事件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 缩写形式，等同于上面的写法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>点击事件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-if-和-v-show-指令"><a href="#v-if-和-v-show-指令" class="headerlink" title="v-if 和 v-show 指令"></a>v-if 和 v-show 指令</h2><p>v-if 和 v-show 指令都用于根据条件显示或隐藏元素，但有一些区别：</p><p>v-if：根据条件进行条件渲染。如果条件为假，元素将被完全从 DOM 中移除。<br>v-show：根据条件进行显示/隐藏切换。元素始终在 DOM 中，通过 CSS 的 display 属性来控制显示/隐藏。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用 v-if 条件渲染 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span></span><br><span class="line">  如果 isShow 为 true，这将被显示。如果为false则不会出现在dom中</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 使用 v-show 控制显示/隐藏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span></span><br><span class="line">  这个元素会根据 isVisible 的值来显示或隐藏，但始终在DOM中。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-for-指令"><a href="#v-for-指令" class="headerlink" title="v-for 指令"></a>v-for 指令</h2><p>v-for 指令用于循环渲染列表数据，类似于 JavaScript 中的 forEach。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 循环渲染列表数据 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-model-指令"><a href="#v-model-指令" class="headerlink" title="v-model 指令"></a>v-model 指令</h2><p>v-model 指令用于在表单元素和 Vue 实例的数据之间进行双向数据绑定。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Copy code</span><br><span class="line"><span class="comment">&lt;!-- 将 input 的值与 message 数据进行双向绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-cloak-指令"><a href="#v-cloak-指令" class="headerlink" title="v-cloak 指令"></a>v-cloak 指令</h2><p>v-cloak 指令用于在 Vue 实例加载前隐藏绑定的元素。它通常与 css 一起使用，以防止在页面加载时显示未渲染的模板。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-attr">[v-cloak]</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-cloak</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 这里的内容会在Vue实例加载后显示 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-once-指令"><a href="#v-once-指令" class="headerlink" title="v-once 指令"></a>v-once 指令</h2><p>“once” 是 Vue.js 中用于事件绑定的修饰符之一。它可以应用于事件监听器，使得绑定的事件只在触发一次后立即解绑，之后不再执行。这意味着绑定的事件监听器将只在首次触发事件时执行，后续的事件触发将不再有响应。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click.once</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>点击一次后解绑<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上述示例中，”v-on:click.once”指令告诉 Vue 在按钮点击事件首次触发时，执行 “handleClick” 方法。但随后再次点击按钮，该事件监听器将被自动解绑，因此不会再触发 “handleClick” 方法。</p><h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h3><p>“once” 指令特别适用于处理只需要执行一次的事件。例如，在展示欢迎提示或用户引导时，您可能只希望在用户首次访问页面时显示该提示，而不希望后续重复显示。</p><p>使用 “once” 修饰符可以有效地确保某个事件监听只在首次绑定时执行，避免了重复监听的性能开销和不必要的触发。</p><p>总结：”once”指令是 Vue.js 的修饰符之一，用于事件监听器，在首次触发事件时执行，之后自动解绑，不再响应后续事件触发。适用于处理只需执行一次的事件场景，如欢迎提示或引导提示。</p><h2 id="Vue-中的-“v-pre”-指令"><a href="#Vue-中的-“v-pre”-指令" class="headerlink" title="Vue 中的 “v-pre” 指令"></a>Vue 中的 “v-pre” 指令</h2><p>“v-pre” 是 Vue.js 中的一个特殊指令，用于在特定元素上标记它们不应该被 Vue 编译。当使用 “v-pre” 指令时，Vue 将跳过对该元素及其子元素的编译过程，保持元素原本的模板标记内容不被解析为 Vue 指令或表达式。</p><h3 id="用法示例"><a href="#用法示例" class="headerlink" title="用法示例"></a>用法示例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-pre</span>&gt;</span></span><br><span class="line">  &#123;&#123; message &#125;&#125;</span><br><span class="line">  <span class="comment">&lt;!-- 这里的 &#123;&#123; message &#125;&#125; 将不会被Vue编译 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上述示例中，<code>v-pre</code> 指令应用于 <code>&lt;div&gt;</code> 元素，使得其中的 <code>&#123;&#123; message &#125;&#125;</code> 不会被 Vue 解析为表达式，而保持原样展示在页面上。</p><h3 id="适用场景-1"><a href="#适用场景-1" class="headerlink" title="适用场景"></a>适用场景</h3><p>“v-pre” 指令通常用于以下情况：</p><ol><li>避免不必要的编译：在某些场景下，我们可能有一些模板代码包含了大量的双花括号表达式，但我们不希望 Vue 对它们进行解析和编译，因为这些表达式可能是在后台渲染的模板中使用的，或者被其他模板引擎处理的，我们只想将它们原封不动地展示在页面上。</li><li>加快编译速度：对于静态内容，使用 “v-pre” 可以减少 Vue 的编译工作量，提高编译速度。</li></ol><p>请注意，使用 “v-pre” 指令时，确保其中的表达式都是静态的，因为它们不会再受到 Vue 的响应式数据更新。</p><p>总结：”v-pre” 指令用于标记元素及其子元素不应该被 Vue 编译，保持其原始模板标记内容不受解析。它适用于避免不必要的编译和加快编译速度的场景。请确保其中的表达式是静态的，因为它们不会再受到 Vue 的响应式数据更新。</p><h1 id="Vue-自定义指令"><a href="#Vue-自定义指令" class="headerlink" title="Vue 自定义指令"></a>Vue 自定义指令</h1><p>Vue.js 允许您自定义指令，这是一种用于在 DOM 元素上添加特定行为的方式。自定义指令可以用于封装常见的 DOM 操作、事件处理、动画等，以便在 Vue 应用中重复使用。</p><h2 id="注册自定义指令"><a href="#注册自定义指令" class="headerlink" title="注册自定义指令"></a>注册自定义指令</h2><p>要注册自定义指令，您需要在 Vue 实例的 directives 选项中添加一个对象，该对象包含自定义指令的名称和相应的操作。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 示例自定义指令，将元素背景色设置为红色 </span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&#x27;red-bg&#x27;</span>, &#123;</span><br><span class="line">    <span class="title function_">inserted</span>(<span class="params">element</span>)&#123;</span><br><span class="line">        element.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;red&#x27;</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="使用自定义指令"><a href="#使用自定义指令" class="headerlink" title="使用自定义指令"></a>使用自定义指令</h2><p>一旦您注册了自定义指令，您就可以在 Vue 模板中使用它们</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-red-bg</span>&gt;</span>这个元素的背景色将会变成红色<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的例子中，v-red-bg 是您自定义的指令名称，它将触发 inserted 钩子函数中的操作，将该元素的背景色设置为红色。</p><h3 id="钩子函数"><a href="#钩子函数" class="headerlink" title="钩子函数"></a>钩子函数</h3><p>自定义指令可以包含多个钩子函数，它们在指令的生命周期中执行特定操作。以下是一些常用的钩子函数：</p><ul><li>bind：在指令第一次绑定到元素时调用，只执行一次。</li><li>inserted：在绑定元素插入父节点时调用。</li><li>update：指令所在模板被重新解析时调用</li><li>componentUpdated：在包含组件的 VNode 和子 VNode 更新后调用。</li><li>unbind：在指令与元素解绑时调用。</li></ul><h2 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h2><p>您可以在自定义指令中传递参数，以便根据需要进行动态操作。参数可以通过指令表达式来传递</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-custom-dir</span>=<span class="string">&quot;42&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 输出：传递的参数是：42 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&quot;custom-dir&quot;</span>, &#123;</span><br><span class="line">  <span class="title function_">bind</span>(<span class="params">element, binding</span>) &#123;</span><br><span class="line">    <span class="comment">// element是自定义指令修饰的真实的dom元素</span></span><br><span class="line">    <span class="comment">// 使用binding.value访问传递的参数</span></span><br><span class="line">    el.<span class="property">innerHTML</span> = <span class="string">`传递的参数是：<span class="subst">$&#123;binding.value&#125;</span>`</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><ol><li>以上实例作用域全局局部写在vue实例内</li><li>指令定义时不加v-,但使用时加v-</li><li>指令名如果是多个单词，要使用kebab-case命名方式不要用camelCase命名</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue-中的指令&quot;&gt;&lt;a href=&quot;#Vue-中的指令&quot; class=&quot;headerlink&quot; title=&quot;Vue 中的指令&quot;&gt;&lt;/a&gt;Vue 中的指令&lt;/h1&gt;&lt;p&gt;指令是 Vue.js 中用于操作 DOM 的特殊属性。它们以 v- 前缀作为标识，可以用于向</summary>
      
    
    
    
    <category term="vue" scheme="https://fangechao6.github.io/categories/vue/"/>
    
    
    <category term="vue" scheme="https://fangechao6.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue检测数据变化的原理</title>
    <link href="https://fangechao6.github.io/posts/88748b59.html"/>
    <id>https://fangechao6.github.io/posts/88748b59.html</id>
    <published>2023-08-01T11:28:45.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue如何检测对象属性改变"><a href="#vue如何检测对象属性改变" class="headerlink" title="vue如何检测对象属性改变"></a>vue如何检测对象属性改变</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vue如何检测对象属性改变&quot;&gt;&lt;a href=&quot;#vue如何检测对象属性改变&quot; class=&quot;headerlink&quot; title=&quot;vue如何检测对象属性改变&quot;&gt;&lt;/a&gt;vue如何检测对象属性改变&lt;/h1&gt;</summary>
      
    
    
    
    <category term="vue" scheme="https://fangechao6.github.io/categories/vue/"/>
    
    
    <category term="vue" scheme="https://fangechao6.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>列表过滤</title>
    <link href="https://fangechao6.github.io/posts/b510980d.html"/>
    <id>https://fangechao6.github.io/posts/b510980d.html</id>
    <published>2023-07-31T18:53:45.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<p>直接上代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>列表过滤<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      请输入名字：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;keyWord&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;person in filPersons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;person.id&quot;</span>&gt;</span></span><br><span class="line">          &#123;&#123;person.name&#125;&#125; - &#123;&#123;person.age&#125;&#125; - &#123;&#123;person.sex&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//用watch实现</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">/* const vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        el: &quot;#root&quot;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        data: &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">          keyWord: &quot;&quot;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">          persons: [</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &#123; id: &quot;001&quot;, name: &quot;马冬梅&quot;, age: 18, sex: &quot;女&quot; &#125;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &#123; id: &quot;002&quot;, name: &quot;周冬雨&quot;, age: 19, sex: &quot;女&quot; &#125;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &#123; id: &quot;003&quot;, name: &quot;周杰伦&quot;, age: 20, sex: &quot;男&quot; &#125;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &#123; id: &quot;004&quot;, name: &quot;温兆伦&quot;, age: 21, sex: &quot;男&quot; &#125;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">          ],</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">          filPersons: [],</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        &#125;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        watch: &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">          keyWord: &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            immediate: true,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            handler(val) &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">              this.filPersons = this.persons.filter((p) =&gt; &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                return p.name.indexOf(val) !== -1;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">              &#125;);</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &#125;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">          &#125;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        &#125;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      &#125;); */</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">keyWord</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">persons</span>: [</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">id</span>: <span class="string">&quot;001&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;马冬梅&quot;</span>, <span class="attr">age</span>: <span class="number">18</span>, <span class="attr">sex</span>: <span class="string">&quot;女&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">id</span>: <span class="string">&quot;002&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;周冬雨&quot;</span>, <span class="attr">age</span>: <span class="number">19</span>, <span class="attr">sex</span>: <span class="string">&quot;女&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">id</span>: <span class="string">&quot;003&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;周杰伦&quot;</span>, <span class="attr">age</span>: <span class="number">20</span>, <span class="attr">sex</span>: <span class="string">&quot;男&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">id</span>: <span class="string">&quot;004&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;温兆伦&quot;</span>, <span class="attr">age</span>: <span class="number">21</span>, <span class="attr">sex</span>: <span class="string">&quot;男&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          ],</span></span><br><span class="line"><span class="language-javascript">          </span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">filPersons</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">persons</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> p.<span class="property">name</span>.<span class="title function_">indexOf</span>(<span class="variable language_">this</span>.<span class="property">keyWord</span>)!==-<span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;直接上代码&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;</summary>
      
    
    
    
    <category term="vue" scheme="https://fangechao6.github.io/categories/vue/"/>
    
    
    <category term="vue" scheme="https://fangechao6.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>列表渲染</title>
    <link href="https://fangechao6.github.io/posts/b39a6957.html"/>
    <id>https://fangechao6.github.io/posts/b39a6957.html</id>
    <published>2023-07-31T14:44:23.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<p>v- for</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;v- for&lt;/p&gt;
</summary>
      
    
    
    
    <category term="vue" scheme="https://fangechao6.github.io/categories/vue/"/>
    
    
    <category term="vue" scheme="https://fangechao6.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>条件渲染</title>
    <link href="https://fangechao6.github.io/posts/42e61835.html"/>
    <id>https://fangechao6.github.io/posts/42e61835.html</id>
    <published>2023-07-31T14:21:47.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<h1 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h1><ol><li>v-if v-else-if  v-else<ul><li>不能破坏连续性</li><li>会影响dom树（不符合条件的不会体现在代码中）例如if不成立的话就会获取不到节点</li></ul></li><li>v-show<ul><li>通过display属性来进行显示隐藏</li></ul></li><li>template模板不影响结构<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;n===1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;n===1&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;n===1&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>可以改为<br>```html<template v-if="n===1"> <div>1</div> <div>2</div> <div>3</div></template></li></ol><p>```不影响结构</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;条件渲染&quot;&gt;&lt;a href=&quot;#条件渲染&quot; class=&quot;headerlink&quot; title=&quot;条件渲染&quot;&gt;&lt;/a&gt;条件渲染&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;v-if v-else-if  v-else&lt;ul&gt;
&lt;li&gt;不能破坏连续性&lt;/li&gt;
&lt;li&gt;会影响dom树（</summary>
      
    
    
    
    <category term="vue" scheme="https://fangechao6.github.io/categories/vue/"/>
    
    
    <category term="vue" scheme="https://fangechao6.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>HDFS</title>
    <link href="https://fangechao6.github.io/posts/5c36621f.html"/>
    <id>https://fangechao6.github.io/posts/5c36621f.html</id>
    <published>2023-07-30T13:05:01.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    
    
    
    <category term="hadoop" scheme="https://fangechao6.github.io/categories/hadoop/"/>
    
    <category term="HDFS" scheme="https://fangechao6.github.io/categories/hadoop/HDFS/"/>
    
    
    <category term="hadoop" scheme="https://fangechao6.github.io/tags/hadoop/"/>
    
    <category term="大数据" scheme="https://fangechao6.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="HDFS" scheme="https://fangechao6.github.io/tags/HDFS/"/>
    
  </entry>
  
  <entry>
    <title>大数据面试题hadoop相关</title>
    <link href="https://fangechao6.github.io/posts/f2de103c.html"/>
    <id>https://fangechao6.github.io/posts/f2de103c.html</id>
    <published>2023-07-29T14:41:45.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、常用端口号"><a href="#一、常用端口号" class="headerlink" title="一、常用端口号"></a>一、常用端口号</h1><ol><li>hadoop3.x<ul><li>HDFS NameNode 内部通常端口:8020/9000/9820</li><li>HDFS NameNode 对用户查询端口: 9870</li><li>Yarn查看任务运行情况:8088</li><li>历史服务器：19888</li></ul></li><li>hadoop2.x <ul><li>HDFS NameNode 内部通常端口:8020/9000</li><li>HDFS NameNode 对用户查询端口: 50070</li><li>Yarn查看任务运行情况:8088</li><li>历史服务器：19888<h1 id="二、常用配置文件"><a href="#二、常用配置文件" class="headerlink" title="二、常用配置文件"></a>二、常用配置文件</h1>3.x <strong>core-site.xml hdfs-site.xml yarn-site.xml mapred-site.xml workers</strong><br>2.x <strong>core-site.xml hdfs-site.xml yarn-site.xml mapred-site.xml slaves</strong></li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、常用端口号&quot;&gt;&lt;a href=&quot;#一、常用端口号&quot; class=&quot;headerlink&quot; title=&quot;一、常用端口号&quot;&gt;&lt;/a&gt;一、常用端口号&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;hadoop3.x&lt;ul&gt;
&lt;li&gt;HDFS NameNode 内部通常端口:8020/</summary>
      
    
    
    
    <category term="hadoop" scheme="https://fangechao6.github.io/categories/hadoop/"/>
    
    
    <category term="hadoop" scheme="https://fangechao6.github.io/tags/hadoop/"/>
    
    <category term="大数据" scheme="https://fangechao6.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>安装完全分布式运行环境</title>
    <link href="https://fangechao6.github.io/posts/bf83ba3c.html"/>
    <id>https://fangechao6.github.io/posts/bf83ba3c.html</id>
    <published>2023-07-27T10:23:09.000Z</published>
    <updated>2024-11-22T13:34:11.692Z</updated>
    
    <content type="html"><![CDATA[<ol><li>scp安全拷贝基本语法（服务器之间拷贝数据）<br><img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230727103606.png" alt=""></li><li>rsync远程同步工具（主要用于备份镜像。具有速度快、避免赋值相同内容和支持符号链接的优点）<ul><li>基本语法<img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230727104311.png" alt=""></li></ul></li><li><p>xsync集群分发脚本</p><ul><li><p>期望脚本在任何路径都能使用（脚本放在声明了全局环境变量的路径）<br>echo $PATH<br>/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/atguigu/.local/bin:/home/atguigu/bin:/opt/module/jdk1.8.0_212/bin</p></li><li></li><li><p>在/home/atguigu/bin目录下创建xsync文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">  #!/bin/bash</span><br><span class="line"></span><br><span class="line">#1. 判断参数个数</span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">    echo Not Enough Arguement!</span><br><span class="line">    exit;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#2. 遍历集群所有机器</span><br><span class="line">for host in hadoop102 hadoop103 hadoop104</span><br><span class="line">do</span><br><span class="line">    echo ====================  $host  ====================</span><br><span class="line">    #3. 遍历所有目录，挨个发送</span><br><span class="line"></span><br><span class="line">    for file in $@</span><br><span class="line">    do</span><br><span class="line">        #4. 判断文件是否存在</span><br><span class="line">        if [ -e $file ]</span><br><span class="line">            then</span><br><span class="line">                #5. 获取父目录</span><br><span class="line">                pdir=$(cd -P $(dirname $file); pwd)</span><br><span class="line"></span><br><span class="line">                #6. 获取当前文件的名称</span><br><span class="line">                fname=$(basename $file)</span><br><span class="line">                ssh $host &quot;mkdir -p $pdir&quot;</span><br><span class="line">                rsync -av $pdir/$fname $host:$pdir</span><br><span class="line">            else</span><br><span class="line">                echo $file does not exists!</span><br><span class="line">        fi</span><br><span class="line">    done</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li>执行以下命令chmod +x xsync</li></ul></li></ol><h1 id="无密登录"><a href="#无密登录" class="headerlink" title="无密登录"></a>无密登录</h1><ul><li>执行命令ssh localhost </li><li>进入home/xxx/.ssh</li><li>执行ssh-keygen -t rsa生成公私钥</li><li>执行ssh-copy-id 目标机器</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;scp安全拷贝基本语法（服务器之间拷贝数据）&lt;br&gt;&lt;img src=&quot;https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230727103606.png&quot; alt=&quot;&quot;</summary>
      
    
    
    
    <category term="hadoop" scheme="https://fangechao6.github.io/categories/hadoop/"/>
    
    
    <category term="hadoop" scheme="https://fangechao6.github.io/tags/hadoop/"/>
    
    <category term="大数据" scheme="https://fangechao6.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
</feed>
