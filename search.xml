<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java添加图片水印</title>
      <link href="/posts/dd6a6641.html"/>
      <url>/posts/dd6a6641.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WatermarkUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据传入水印文字长度自动调整水印宽高，需要添加换行符\n</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> watermarkText 蒙BA4932 李喜军 2023-05-04 11:35:48 \n陕西省西安市未央区A区三排西 \n北纬34.357731 东经108.865275</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> originalImage</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BufferedImage <span class="title function_">genWatermark</span><span class="params">(String watermarkText,BufferedImage originalImage)</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">Graphics2D</span> <span class="variable">graphics</span> <span class="operator">=</span> originalImage.createGraphics();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置水印字体和颜色</span></span><br><span class="line">            <span class="type">Font</span> <span class="variable">font</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;宋体&quot;</span>, Font.BOLD, <span class="number">20</span>);</span><br><span class="line">            graphics.setFont(font);</span><br><span class="line">            graphics.setColor(Color.WHITE);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取水印文字的行数和每行文字的个数</span></span><br><span class="line">            String[] lines = watermarkText.split(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">numberOfLines</span> <span class="operator">=</span> lines.length;</span><br><span class="line">            <span class="type">String</span> <span class="variable">maxString</span> <span class="operator">=</span> Arrays.stream(lines)</span><br><span class="line">                    .max(Comparator.comparingInt(String::length))</span><br><span class="line">                    .orElse(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 水印文字的宽度和高度</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">watermarkWidth</span> <span class="operator">=</span> graphics.getFontMetrics().stringWidth(maxString);</span><br><span class="line">            <span class="type">int</span> <span class="variable">watermarkHeight</span> <span class="operator">=</span> graphics.getFontMetrics().getHeight();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置透明度</span></span><br><span class="line">            <span class="type">float</span> <span class="variable">alpha</span> <span class="operator">=</span> <span class="number">0.5f</span>; <span class="comment">// 透明度范围：0.0f（完全透明）到1.0f（完全不透明）</span></span><br><span class="line">            graphics.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, alpha));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制黑色背景</span></span><br><span class="line">            graphics.setColor(Color.BLACK);</span><br><span class="line">            <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">rectWidth</span> <span class="operator">=</span> watermarkWidth + <span class="number">10</span>; <span class="comment">// 背景宽度</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">rectHeight</span> <span class="operator">=</span> watermarkHeight * numberOfLines + <span class="number">10</span>; <span class="comment">// 背景高度</span></span><br><span class="line">            graphics.fillRect(x, y, rectWidth, rectHeight);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制白色文字</span></span><br><span class="line">            graphics.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, <span class="number">1.0f</span>));</span><br><span class="line">            y += watermarkHeight;</span><br><span class="line">            graphics.setColor(Color.WHITE);</span><br><span class="line">            <span class="keyword">for</span> (String line : lines) &#123;</span><br><span class="line">                graphics.drawString(line, x + <span class="number">10</span>, y);</span><br><span class="line">                y += watermarkHeight; <span class="comment">// 每行增加水印文字的高度</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            graphics.dispose();</span><br><span class="line">            <span class="keyword">return</span> originalImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java生成二维码</title>
      <link href="/posts/b78651e0.html"/>
      <url>/posts/b78651e0.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 二维码宽高</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">QR_CODE_WH</span> <span class="operator">=</span> <span class="number">500</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 左右间距</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">LEFT_RIGHT_EMPTY</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用示例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"> <span class="comment">/*   public static void main(String[] args) &#123;</span></span><br><span class="line"><span class="comment">        // 生成图片</span></span><br><span class="line"><span class="comment">        BufferedImage image = generateTextImage(&quot;规划局&quot;,</span></span><br><span class="line"><span class="comment">                &quot;fasfds&quot;, &quot;AAA 高科技&quot;, &quot;CCC 黑科技&quot;);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        // 保存图片到文件</span></span><br><span class="line"><span class="comment">        try &#123;</span></span><br><span class="line"><span class="comment">            File outputFile = new File(&quot;output.png&quot;);</span></span><br><span class="line"><span class="comment">            ImageIO.write(image, &quot;png&quot;, outputFile);</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;Image saved to: &quot; + outputFile.getAbsolutePath());</span></span><br><span class="line"><span class="comment">        &#125; catch (IOException e) &#123;</span></span><br><span class="line"><span class="comment">//            log.error(e.getMessage());</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成订单二维码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> topText 顶部文字 公司</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> qrCodeText 二维码文字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> middleText 底部文字 发货地 空格分割颜色</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bottomText 底部文字 收货地 空格分割颜色</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 图片 BufferedImage 对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BufferedImage <span class="title function_">generateTextImage</span><span class="params">(String topText, String qrCodeText, String middleText, String bottomText)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> calculateImageHeight(topText, middleText, bottomText);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建 BufferedImage</span></span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedImage</span>(QR_CODE_WH, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        <span class="type">Graphics2D</span> <span class="variable">g2d</span> <span class="operator">=</span> image.createGraphics();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置背景色为白色</span></span><br><span class="line">        g2d.setColor(Color.WHITE);</span><br><span class="line">        g2d.fillRect(<span class="number">0</span>, <span class="number">0</span>, QR_CODE_WH, height);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绘制顶部文字</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">qrCodeY</span> <span class="operator">=</span> drawTopText(topText, g2d) + <span class="number">10</span>; <span class="comment">// 上边的文字高度 + 40 px 间距</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算二维码位置</span></span><br><span class="line">        <span class="comment">// 在中部绘制二维码（假设 QRCodeGenerator 类中有生成二维码的方法）</span></span><br><span class="line">        drawQRCode(g2d, qrCodeText, qrCodeY);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算天蓝色文本位置</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">blueTextY</span> <span class="operator">=</span> qrCodeY + QR_CODE_WH; <span class="comment">// 二维码的底部 + 40 px 间距</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在中部绘制天蓝色文本</span></span><br><span class="line">        g2d.setColor(Color.CYAN);</span><br><span class="line">        <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> drawWrappedText(g2d, middleText, blueTextY);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算粉红色文本位置</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">pinkTextY</span> <span class="operator">=</span> y + <span class="number">40</span>; <span class="comment">// 天蓝色文本的底部 + 20 px 间距</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在底部绘制粉红色文本</span></span><br><span class="line">        g2d.setColor(Color.PINK);</span><br><span class="line">        drawWrappedText(g2d, bottomText, pinkTextY);</span><br><span class="line"></span><br><span class="line">        g2d.dispose();</span><br><span class="line">        <span class="keyword">return</span> image;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">drawTopText</span><span class="params">(String topText, Graphics2D g2d)</span> &#123;</span><br><span class="line">        <span class="comment">// 设置字体和颜色</span></span><br><span class="line">        <span class="type">Font</span> <span class="variable">font</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;宋体&quot;</span>, Font.BOLD, <span class="number">30</span>); <span class="comment">// 指定中文字体</span></span><br><span class="line">        g2d.setFont(font);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算顶部文本的位置</span></span><br><span class="line">        <span class="type">FontMetrics</span> <span class="variable">metrics</span> <span class="operator">=</span> g2d.getFontMetrics(font);</span><br><span class="line">        <span class="type">int</span> <span class="variable">topTextX</span> <span class="operator">=</span> LEFT_RIGHT_EMPTY;</span><br><span class="line">        <span class="type">int</span> <span class="variable">topTextY</span> <span class="operator">=</span> LEFT_RIGHT_EMPTY + <span class="number">20</span> + metrics.getAscent();</span><br><span class="line">        <span class="type">int</span> <span class="variable">lineHeight</span> <span class="operator">=</span> metrics.getHeight();</span><br><span class="line">        <span class="comment">// 在顶部绘制黑色文本</span></span><br><span class="line">        g2d.setColor(Color.BLACK);</span><br><span class="line"></span><br><span class="line">        String[] words = topText.split(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String word : words) &#123;</span><br><span class="line">            <span class="comment">// 计算单词的宽度</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">wordWidth</span> <span class="operator">=</span> metrics.stringWidth(word);</span><br><span class="line">            <span class="comment">// 如果当前行文本加上当前单词超过图片宽度，换行</span></span><br><span class="line">            <span class="keyword">if</span> (topTextX + wordWidth &gt; QR_CODE_WH - LEFT_RIGHT_EMPTY) &#123;</span><br><span class="line">                topTextX = LEFT_RIGHT_EMPTY; <span class="comment">// 回到初始 X 坐标</span></span><br><span class="line">                topTextY += lineHeight; <span class="comment">// 换行</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 在指定位置绘制文本</span></span><br><span class="line">            g2d.drawString(word, topTextX, topTextY);</span><br><span class="line">            <span class="comment">// 更新 X 坐标，以便绘制下一个单词</span></span><br><span class="line">            topTextX += wordWidth; <span class="comment">// 不添加间距，以免在单词之间产生额外间距</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> topTextY;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">drawQRCode</span><span class="params">(Graphics2D g2d, String qrCodeText, <span class="type">int</span> qrCodeY)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 使用 ZXing 生成二维码</span></span><br><span class="line">            Map&lt;EncodeHintType, Object&gt; hints = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            hints.put(EncodeHintType.CHARACTER_SET, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            <span class="type">Writer</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QRCodeWriter</span>();</span><br><span class="line">            <span class="type">BitMatrix</span> <span class="variable">bitMatrix</span> <span class="operator">=</span> writer.encode(qrCodeText, BarcodeFormat.QR_CODE, QR_CODE_WH, QR_CODE_WH, hints);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 将 BitMatrix 绘制到 g2d 上</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>; x &lt; bitMatrix.getWidth(); x++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">0</span>; y &lt; bitMatrix.getHeight(); y++) &#123;</span><br><span class="line">                    g2d.setColor(bitMatrix.get(x, y) ? Color.BLACK : Color.WHITE);</span><br><span class="line">                    g2d.fillRect(x, y + qrCodeY, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (WriterException e) &#123;</span><br><span class="line"><span class="comment">//            log.error(e.getMessage());</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">drawWrappedText</span><span class="params">(Graphics2D g2d, String text, <span class="type">int</span> startY)</span> &#123;</span><br><span class="line">        <span class="comment">// 设置字体和颜色</span></span><br><span class="line">        <span class="type">Font</span> <span class="variable">font</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">20</span>); <span class="comment">// 指定中文字体</span></span><br><span class="line">        g2d.setFont(font);</span><br><span class="line"></span><br><span class="line">        <span class="type">FontMetrics</span> <span class="variable">metrics</span> <span class="operator">=</span> g2d.getFontMetrics(g2d.getFont());</span><br><span class="line">        <span class="type">int</span> <span class="variable">lineHeight</span> <span class="operator">=</span> metrics.getHeight();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始 X 坐标</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> LEFT_RIGHT_EMPTY;</span><br><span class="line">        <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> startY;</span><br><span class="line"></span><br><span class="line">        String[] words = text.split(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String word : words) &#123;</span><br><span class="line">            <span class="comment">// 计算单词的宽度</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">wordWidth</span> <span class="operator">=</span> metrics.stringWidth(word);</span><br><span class="line">            <span class="comment">// 遇到空格改为黑色</span></span><br><span class="line">            <span class="keyword">if</span> (word.equals(<span class="string">&quot; &quot;</span>)) &#123;</span><br><span class="line">                g2d.setColor(Color.darkGray);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 如果当前行文本加上当前单词超过图片宽度，换行</span></span><br><span class="line">            <span class="keyword">if</span> (x + wordWidth &gt; QR_CODE_WH - LEFT_RIGHT_EMPTY) &#123;</span><br><span class="line">                x = LEFT_RIGHT_EMPTY; <span class="comment">// 回到初始 X 坐标</span></span><br><span class="line">                y += lineHeight; <span class="comment">// 换行</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 在指定位置绘制文本</span></span><br><span class="line">            g2d.drawString(word, x, y);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 更新 X 坐标，以便绘制下一个单词</span></span><br><span class="line">            x += wordWidth; <span class="comment">// 不添加间距，以免在单词之间产生额外间距</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">calculateImageHeight</span><span class="params">(String topText, String middleText, String bottomText)</span> &#123;</span><br><span class="line">        <span class="type">FontMetrics</span> <span class="variable">fontMetrics</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedImage</span>(<span class="number">1</span>, <span class="number">1</span>, BufferedImage.TYPE_INT_RGB).createGraphics().getFontMetrics(<span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;宋体&quot;</span>, Font.BOLD, <span class="number">30</span>));</span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> calculateWrappedTextHeight(topText, fontMetrics); <span class="comment">// 初始高度，用于顶部文本</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算二维码的高度</span></span><br><span class="line">        height += <span class="number">40</span>; <span class="comment">// 二维码上方的间距</span></span><br><span class="line">        height += QR_CODE_WH; <span class="comment">// 二维码的高度</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算天蓝色文本的高度</span></span><br><span class="line">        height += <span class="number">20</span>; <span class="comment">// 天蓝色文本上方的间距</span></span><br><span class="line">        height += calculateWrappedTextHeight(middleText, fontMetrics);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算粉红色文本的高度</span></span><br><span class="line">        height += <span class="number">20</span>; <span class="comment">// 粉红色文本上方的间距</span></span><br><span class="line">        height += calculateWrappedTextHeight(bottomText, fontMetrics);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">calculateWrappedTextHeight</span><span class="params">(String text, FontMetrics fontMetrics)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">lineHeight</span> <span class="operator">=</span> fontMetrics.getHeight();</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> LEFT_RIGHT_EMPTY;</span><br><span class="line">        <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String word : text.split(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">wordWidth</span> <span class="operator">=</span> fontMetrics.stringWidth(word + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (x + wordWidth &gt; QR_CODE_WH) &#123;</span><br><span class="line">                x = LEFT_RIGHT_EMPTY;</span><br><span class="line">                y += lineHeight;</span><br><span class="line">            &#125;</span><br><span class="line">            x += wordWidth;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> y + lineHeight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] bufferedImageToBytes(BufferedImage bufferedImage) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        ImageIO.write(bufferedImage, <span class="string">&quot;jpg&quot;</span>, baos); <span class="comment">// 你可以根据需要选择不同的图像格式，这里选择了 PNG 格式</span></span><br><span class="line">        <span class="keyword">return</span> baos.toByteArray();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue脚手架</title>
      <link href="/posts/33225426.html"/>
      <url>/posts/33225426.html</url>
      
        <content type="html"><![CDATA[<h2 id="脚手架文件结构"><a href="#脚手架文件结构" class="headerlink" title="脚手架文件结构"></a>脚手架文件结构</h2><pre><code>├── node_modules ├── public│   ├── favicon.ico: 页签图标│   └── index.html: 主页面├── src│   ├── assets: 存放静态资源│   │   └── logo.png│   │── component: 存放组件│   │   └── HelloWorld.vue│   │── App.vue: 汇总所有组件│   │── main.js: 入口文件├── .gitignore: git版本管制忽略的配置├── babel.config.js: babel的配置文件├── package.json: 应用包配置文件 ├── README.md: 应用描述文件├── package-lock.json：包版本控制文件</code></pre><h2 id="关于不同版本的Vue"><a href="#关于不同版本的Vue" class="headerlink" title="关于不同版本的Vue"></a>关于不同版本的Vue</h2><ol><li>vue.js与vue.runtime.xxx.js的区别：<ol><li>vue.js是完整版的Vue，包含：核心功能 + 模板解析器。</li><li>vue.runtime.xxx.js是运行版的Vue，只包含：核心功能；没有模板解析器。</li></ol></li><li>因为vue.runtime.xxx.js没有模板解析器，所以不能使用template这个配置项，需要使用render函数接收到的createElement函数去指定具体内容。</li></ol><h2 id="vue-config-js配置文件"><a href="#vue-config-js配置文件" class="headerlink" title="vue.config.js配置文件"></a>vue.config.js配置文件</h2><ol><li>使用vue inspect &gt; output.js可以查看到Vue脚手架的默认配置。</li><li>使用vue.config.js可以对脚手架进行个性化定制，详情见：<a href="https://cli.vuejs.org/zh">https://cli.vuejs.org/zh</a></li></ol><h2 id="ref属性"><a href="#ref属性" class="headerlink" title="ref属性"></a>ref属性</h2><ol><li>被用来给元素或子组件注册引用信息（id的替代者）</li><li>应用在html标签上获取的是真实DOM元素，应用在组件标签上是组件实例对象（vc）</li><li>使用方式：<ol><li>打标识：<code>&lt;h1 ref=&quot;xxx&quot;&gt;.....&lt;/h1&gt;</code> 或 <code>&lt;School ref=&quot;xxx&quot;&gt;&lt;/School&gt;</code></li><li>获取：<code>this.$refs.xxx</code></li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue组件化编程</title>
      <link href="/posts/405bf84.html"/>
      <url>/posts/405bf84.html</url>
      
        <content type="html"><![CDATA[<h1 id="非单文件组件："><a href="#非单文件组件：" class="headerlink" title="非单文件组件："></a>非单文件组件：</h1><p>一个文件中包含n个组件</p><h1 id="单文件组件："><a href="#单文件组件：" class="headerlink" title="单文件组件："></a>单文件组件：</h1><p>一个文件中只包含有1个组件</p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue生命周期</title>
      <link href="/posts/b340e08.html"/>
      <url>/posts/b340e08.html</url>
      
        <content type="html"><![CDATA[<h1 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h1><p><img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png" alt=""></p><h1 id="创建阶段："><a href="#创建阶段：" class="headerlink" title="创建阶段："></a>创建阶段：</h1><ul><li>beforeCreate：在实例初始化之后，数据观测和事件配置之前调用。此时data和methods等还未初始化。</li><li>created：在实例创建完成后立即调用。数据已经初始化，可以在这个阶段对数据进行一些处理。</li></ul><h1 id="挂载阶段："><a href="#挂载阶段：" class="headerlink" title="挂载阶段："></a>挂载阶段：</h1><ul><li>beforeMount：在挂载开始之前被调用。此时模板编译已经完成，但还未把生成的DOM插入页面。</li><li>mounted：在挂载完成后调用。此时组件已经在DOM中插入，可以访问DOM元素，执行网络请求，以及其他一些需要在组件挂载后进行的操作。</li></ul><h1 id="更新阶段："><a href="#更新阶段：" class="headerlink" title="更新阶段："></a>更新阶段：</h1><ul><li>beforeUpdate：在数据更新之前调用，发生在虚拟DOM重新渲染和打补丁之前。可以用来在更新之前访问现有的DOM状态。</li><li>updated：在数据更新之后调用，虚拟DOM重新渲染和打补丁完成后触发。可以执行与更新后的DOM进行交互的任务。</li></ul><h1 id="销毁阶段："><a href="#销毁阶段：" class="headerlink" title="销毁阶段："></a>销毁阶段：</h1><ul><li>beforeDestroy：在实例销毁之前调用。可以在这里进行一些清理工作，如取消定时器、解绑全局事件等。</li><li>destroyed：在实例销毁后调用。此时Vue实例及其所有的事件监听器和子组件都已被销毁。</li></ul><h1 id="常用的生命周期钩子："><a href="#常用的生命周期钩子：" class="headerlink" title="常用的生命周期钩子："></a>常用的生命周期钩子：</h1><ol><li>mounted：发送ajax请求、启动定时器、绑定自定义事件、订阅消息等【初始化操作】。</li><li>beforeDestroy：清除定时器、解绑自定义事件、取消订阅小蝶等【收尾工作】</li></ol><h1 id="关于销毁Vue实例"><a href="#关于销毁Vue实例" class="headerlink" title="关于销毁Vue实例"></a>关于销毁Vue实例</h1><ol><li>销毁后借助Vue开发者工具看不到任何信息</li><li>销毁后自定义事件会失效、但原生DOM事件依然有效</li><li>一般不会在beforeDestroy中操作数据，因为即使操作数据，也不会在触发数据更新流程了</li></ol>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中的指令</title>
      <link href="/posts/5cb25666.html"/>
      <url>/posts/5cb25666.html</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-中的指令"><a href="#Vue-中的指令" class="headerlink" title="Vue 中的指令"></a>Vue 中的指令</h1><p>指令是 Vue.js 中用于操作 DOM 的特殊属性。它们以 v- 前缀作为标识，可以用于向模板中添加交互和动态功能。</p><h2 id="v-bind-指令"><a href="#v-bind-指令" class="headerlink" title="v-bind 指令"></a>v-bind 指令</h2><p>v-bind 指令用于绑定元素属性和 Vue 实例的数据。它可以实现动态更新元素属性的值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 将 message 绑定到元素的 title 属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;message&quot;</span>&gt;</span>悬停在我上面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 缩写形式，等同于上面的写法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">:title</span>=<span class="string">&quot;message&quot;</span>&gt;</span>悬停在我上面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-on-指令"><a href="#v-on-指令" class="headerlink" title="v-on 指令"></a>v-on 指令</h2><p>v-on 指令用于监听 DOM 事件，并在事件触发时执行相应的方法。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在点击按钮时执行 handleClick 方法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>点击事件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 缩写形式，等同于上面的写法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>点击事件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-if-和-v-show-指令"><a href="#v-if-和-v-show-指令" class="headerlink" title="v-if 和 v-show 指令"></a>v-if 和 v-show 指令</h2><p>v-if 和 v-show 指令都用于根据条件显示或隐藏元素，但有一些区别：</p><p>v-if：根据条件进行条件渲染。如果条件为假，元素将被完全从 DOM 中移除。<br>v-show：根据条件进行显示/隐藏切换。元素始终在 DOM 中，通过 CSS 的 display 属性来控制显示/隐藏。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用 v-if 条件渲染 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span></span><br><span class="line">  如果 isShow 为 true，这将被显示。如果为false则不会出现在dom中</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 使用 v-show 控制显示/隐藏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span></span><br><span class="line">  这个元素会根据 isVisible 的值来显示或隐藏，但始终在DOM中。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-for-指令"><a href="#v-for-指令" class="headerlink" title="v-for 指令"></a>v-for 指令</h2><p>v-for 指令用于循环渲染列表数据，类似于 JavaScript 中的 forEach。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 循环渲染列表数据 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-model-指令"><a href="#v-model-指令" class="headerlink" title="v-model 指令"></a>v-model 指令</h2><p>v-model 指令用于在表单元素和 Vue 实例的数据之间进行双向数据绑定。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Copy code</span><br><span class="line"><span class="comment">&lt;!-- 将 input 的值与 message 数据进行双向绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-cloak-指令"><a href="#v-cloak-指令" class="headerlink" title="v-cloak 指令"></a>v-cloak 指令</h2><p>v-cloak 指令用于在 Vue 实例加载前隐藏绑定的元素。它通常与 css 一起使用，以防止在页面加载时显示未渲染的模板。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-attr">[v-cloak]</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-cloak</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 这里的内容会在Vue实例加载后显示 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-once-指令"><a href="#v-once-指令" class="headerlink" title="v-once 指令"></a>v-once 指令</h2><p>“once” 是 Vue.js 中用于事件绑定的修饰符之一。它可以应用于事件监听器，使得绑定的事件只在触发一次后立即解绑，之后不再执行。这意味着绑定的事件监听器将只在首次触发事件时执行，后续的事件触发将不再有响应。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click.once</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>点击一次后解绑<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上述示例中，”v-on:click.once”指令告诉 Vue 在按钮点击事件首次触发时，执行 “handleClick” 方法。但随后再次点击按钮，该事件监听器将被自动解绑，因此不会再触发 “handleClick” 方法。</p><h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h3><p>“once” 指令特别适用于处理只需要执行一次的事件。例如，在展示欢迎提示或用户引导时，您可能只希望在用户首次访问页面时显示该提示，而不希望后续重复显示。</p><p>使用 “once” 修饰符可以有效地确保某个事件监听只在首次绑定时执行，避免了重复监听的性能开销和不必要的触发。</p><p>总结：”once”指令是 Vue.js 的修饰符之一，用于事件监听器，在首次触发事件时执行，之后自动解绑，不再响应后续事件触发。适用于处理只需执行一次的事件场景，如欢迎提示或引导提示。</p><h2 id="Vue-中的-“v-pre”-指令"><a href="#Vue-中的-“v-pre”-指令" class="headerlink" title="Vue 中的 “v-pre” 指令"></a>Vue 中的 “v-pre” 指令</h2><p>“v-pre” 是 Vue.js 中的一个特殊指令，用于在特定元素上标记它们不应该被 Vue 编译。当使用 “v-pre” 指令时，Vue 将跳过对该元素及其子元素的编译过程，保持元素原本的模板标记内容不被解析为 Vue 指令或表达式。</p><h3 id="用法示例"><a href="#用法示例" class="headerlink" title="用法示例"></a>用法示例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-pre</span>&gt;</span></span><br><span class="line">  &#123;&#123; message &#125;&#125;</span><br><span class="line">  <span class="comment">&lt;!-- 这里的 &#123;&#123; message &#125;&#125; 将不会被Vue编译 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上述示例中，<code>v-pre</code> 指令应用于 <code>&lt;div&gt;</code> 元素，使得其中的 <code>&#123;&#123; message &#125;&#125;</code> 不会被 Vue 解析为表达式，而保持原样展示在页面上。</p><h3 id="适用场景-1"><a href="#适用场景-1" class="headerlink" title="适用场景"></a>适用场景</h3><p>“v-pre” 指令通常用于以下情况：</p><ol><li>避免不必要的编译：在某些场景下，我们可能有一些模板代码包含了大量的双花括号表达式，但我们不希望 Vue 对它们进行解析和编译，因为这些表达式可能是在后台渲染的模板中使用的，或者被其他模板引擎处理的，我们只想将它们原封不动地展示在页面上。</li><li>加快编译速度：对于静态内容，使用 “v-pre” 可以减少 Vue 的编译工作量，提高编译速度。</li></ol><p>请注意，使用 “v-pre” 指令时，确保其中的表达式都是静态的，因为它们不会再受到 Vue 的响应式数据更新。</p><p>总结：”v-pre” 指令用于标记元素及其子元素不应该被 Vue 编译，保持其原始模板标记内容不受解析。它适用于避免不必要的编译和加快编译速度的场景。请确保其中的表达式是静态的，因为它们不会再受到 Vue 的响应式数据更新。</p><h1 id="Vue-自定义指令"><a href="#Vue-自定义指令" class="headerlink" title="Vue 自定义指令"></a>Vue 自定义指令</h1><p>Vue.js 允许您自定义指令，这是一种用于在 DOM 元素上添加特定行为的方式。自定义指令可以用于封装常见的 DOM 操作、事件处理、动画等，以便在 Vue 应用中重复使用。</p><h2 id="注册自定义指令"><a href="#注册自定义指令" class="headerlink" title="注册自定义指令"></a>注册自定义指令</h2><p>要注册自定义指令，您需要在 Vue 实例的 directives 选项中添加一个对象，该对象包含自定义指令的名称和相应的操作。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 示例自定义指令，将元素背景色设置为红色 </span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&#x27;red-bg&#x27;</span>, &#123;</span><br><span class="line">    <span class="title function_">inserted</span>(<span class="params">element</span>)&#123;</span><br><span class="line">        element.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;red&#x27;</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="使用自定义指令"><a href="#使用自定义指令" class="headerlink" title="使用自定义指令"></a>使用自定义指令</h2><p>一旦您注册了自定义指令，您就可以在 Vue 模板中使用它们</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-red-bg</span>&gt;</span>这个元素的背景色将会变成红色<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的例子中，v-red-bg 是您自定义的指令名称，它将触发 inserted 钩子函数中的操作，将该元素的背景色设置为红色。</p><h3 id="钩子函数"><a href="#钩子函数" class="headerlink" title="钩子函数"></a>钩子函数</h3><p>自定义指令可以包含多个钩子函数，它们在指令的生命周期中执行特定操作。以下是一些常用的钩子函数：</p><ul><li>bind：在指令第一次绑定到元素时调用，只执行一次。</li><li>inserted：在绑定元素插入父节点时调用。</li><li>update：指令所在模板被重新解析时调用</li><li>componentUpdated：在包含组件的 VNode 和子 VNode 更新后调用。</li><li>unbind：在指令与元素解绑时调用。</li></ul><h2 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h2><p>您可以在自定义指令中传递参数，以便根据需要进行动态操作。参数可以通过指令表达式来传递</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-custom-dir</span>=<span class="string">&quot;42&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 输出：传递的参数是：42 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&quot;custom-dir&quot;</span>, &#123;</span><br><span class="line">  <span class="title function_">bind</span>(<span class="params">element, binding</span>) &#123;</span><br><span class="line">    <span class="comment">// element是自定义指令修饰的真实的dom元素</span></span><br><span class="line">    <span class="comment">// 使用binding.value访问传递的参数</span></span><br><span class="line">    el.<span class="property">innerHTML</span> = <span class="string">`传递的参数是：<span class="subst">$&#123;binding.value&#125;</span>`</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><ol><li>以上实例作用域全局局部写在vue实例内</li><li>指令定义时不加v-,但使用时加v-</li><li>指令名如果是多个单词，要使用kebab-case命名方式不要用camelCase命名</li></ol>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue检测数据变化的原理</title>
      <link href="/posts/88748b59.html"/>
      <url>/posts/88748b59.html</url>
      
        <content type="html"><![CDATA[<h1 id="vue如何检测对象属性改变"><a href="#vue如何检测对象属性改变" class="headerlink" title="vue如何检测对象属性改变"></a>vue如何检测对象属性改变</h1>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>列表过滤</title>
      <link href="/posts/b510980d.html"/>
      <url>/posts/b510980d.html</url>
      
        <content type="html"><![CDATA[<p>直接上代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>列表过滤<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      请输入名字：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;keyWord&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;person in filPersons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;person.id&quot;</span>&gt;</span></span><br><span class="line">          &#123;&#123;person.name&#125;&#125; - &#123;&#123;person.age&#125;&#125; - &#123;&#123;person.sex&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//用watch实现</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">/* const vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        el: &quot;#root&quot;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        data: &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">          keyWord: &quot;&quot;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">          persons: [</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &#123; id: &quot;001&quot;, name: &quot;马冬梅&quot;, age: 18, sex: &quot;女&quot; &#125;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &#123; id: &quot;002&quot;, name: &quot;周冬雨&quot;, age: 19, sex: &quot;女&quot; &#125;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &#123; id: &quot;003&quot;, name: &quot;周杰伦&quot;, age: 20, sex: &quot;男&quot; &#125;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &#123; id: &quot;004&quot;, name: &quot;温兆伦&quot;, age: 21, sex: &quot;男&quot; &#125;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">          ],</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">          filPersons: [],</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        &#125;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        watch: &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">          keyWord: &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            immediate: true,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            handler(val) &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">              this.filPersons = this.persons.filter((p) =&gt; &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                return p.name.indexOf(val) !== -1;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">              &#125;);</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &#125;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">          &#125;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        &#125;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      &#125;); */</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">keyWord</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">persons</span>: [</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">id</span>: <span class="string">&quot;001&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;马冬梅&quot;</span>, <span class="attr">age</span>: <span class="number">18</span>, <span class="attr">sex</span>: <span class="string">&quot;女&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">id</span>: <span class="string">&quot;002&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;周冬雨&quot;</span>, <span class="attr">age</span>: <span class="number">19</span>, <span class="attr">sex</span>: <span class="string">&quot;女&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">id</span>: <span class="string">&quot;003&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;周杰伦&quot;</span>, <span class="attr">age</span>: <span class="number">20</span>, <span class="attr">sex</span>: <span class="string">&quot;男&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">id</span>: <span class="string">&quot;004&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;温兆伦&quot;</span>, <span class="attr">age</span>: <span class="number">21</span>, <span class="attr">sex</span>: <span class="string">&quot;男&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          ],</span></span><br><span class="line"><span class="language-javascript">          </span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">filPersons</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">persons</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> p.<span class="property">name</span>.<span class="title function_">indexOf</span>(<span class="variable language_">this</span>.<span class="property">keyWord</span>)!==-<span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>列表渲染</title>
      <link href="/posts/b39a6957.html"/>
      <url>/posts/b39a6957.html</url>
      
        <content type="html"><![CDATA[<p>v- for</p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>条件渲染</title>
      <link href="/posts/42e61835.html"/>
      <url>/posts/42e61835.html</url>
      
        <content type="html"><![CDATA[<h1 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h1><ol><li>v-if v-else-if  v-else<ul><li>不能破坏连续性</li><li>会影响dom树（不符合条件的不会体现在代码中）例如if不成立的话就会获取不到节点</li></ul></li><li>v-show<ul><li>通过display属性来进行显示隐藏</li></ul></li><li>template模板不影响结构<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;n===1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;n===1&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;n===1&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>可以改为<br>```html<template v-if="n===1"> <div>1</div> <div>2</div> <div>3</div></template></li></ol><p>```不影响结构</p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HDFS</title>
      <link href="/posts/5c36621f.html"/>
      <url>/posts/5c36621f.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> hadoop </category>
          
          <category> HDFS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop </tag>
            
            <tag> 大数据 </tag>
            
            <tag> HDFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据面试题hadoop相关</title>
      <link href="/posts/f2de103c.html"/>
      <url>/posts/f2de103c.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、常用端口号"><a href="#一、常用端口号" class="headerlink" title="一、常用端口号"></a>一、常用端口号</h1><ol><li>hadoop3.x<ul><li>HDFS NameNode 内部通常端口:8020/9000/9820</li><li>HDFS NameNode 对用户查询端口: 9870</li><li>Yarn查看任务运行情况:8088</li><li>历史服务器：19888</li></ul></li><li>hadoop2.x <ul><li>HDFS NameNode 内部通常端口:8020/9000</li><li>HDFS NameNode 对用户查询端口: 50070</li><li>Yarn查看任务运行情况:8088</li><li>历史服务器：19888<h1 id="二、常用配置文件"><a href="#二、常用配置文件" class="headerlink" title="二、常用配置文件"></a>二、常用配置文件</h1>3.x <strong>core-site.xml hdfs-site.xml yarn-site.xml mapred-site.xml workers</strong><br>2.x <strong>core-site.xml hdfs-site.xml yarn-site.xml mapred-site.xml slaves</strong></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop </tag>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装完全分布式运行环境</title>
      <link href="/posts/bf83ba3c.html"/>
      <url>/posts/bf83ba3c.html</url>
      
        <content type="html"><![CDATA[<ol><li>scp安全拷贝基本语法（服务器之间拷贝数据）<br><img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230727103606.png" alt=""></li><li>rsync远程同步工具（主要用于备份镜像。具有速度快、避免赋值相同内容和支持符号链接的优点）<ul><li>基本语法<img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230727104311.png" alt=""></li></ul></li><li><p>xsync集群分发脚本</p><ul><li><p>期望脚本在任何路径都能使用（脚本放在声明了全局环境变量的路径）<br>echo $PATH<br>/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/atguigu/.local/bin:/home/atguigu/bin:/opt/module/jdk1.8.0_212/bin</p></li><li></li><li><p>在/home/atguigu/bin目录下创建xsync文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">  #!/bin/bash</span><br><span class="line"></span><br><span class="line">#1. 判断参数个数</span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">    echo Not Enough Arguement!</span><br><span class="line">    exit;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#2. 遍历集群所有机器</span><br><span class="line">for host in hadoop102 hadoop103 hadoop104</span><br><span class="line">do</span><br><span class="line">    echo ====================  $host  ====================</span><br><span class="line">    #3. 遍历所有目录，挨个发送</span><br><span class="line"></span><br><span class="line">    for file in $@</span><br><span class="line">    do</span><br><span class="line">        #4. 判断文件是否存在</span><br><span class="line">        if [ -e $file ]</span><br><span class="line">            then</span><br><span class="line">                #5. 获取父目录</span><br><span class="line">                pdir=$(cd -P $(dirname $file); pwd)</span><br><span class="line"></span><br><span class="line">                #6. 获取当前文件的名称</span><br><span class="line">                fname=$(basename $file)</span><br><span class="line">                ssh $host &quot;mkdir -p $pdir&quot;</span><br><span class="line">                rsync -av $pdir/$fname $host:$pdir</span><br><span class="line">            else</span><br><span class="line">                echo $file does not exists!</span><br><span class="line">        fi</span><br><span class="line">    done</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li>执行以下命令chmod +x xsync</li></ul></li></ol><h1 id="无密登录"><a href="#无密登录" class="headerlink" title="无密登录"></a>无密登录</h1><ul><li>执行命令ssh localhost </li><li>进入home/xxx/.ssh</li><li>执行ssh-keygen -t rsa生成公私钥</li><li>执行ssh-copy-id 目标机器</li></ul>]]></content>
      
      
      <categories>
          
          <category> hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop </tag>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vmware centos7.5安装配置</title>
      <link href="/posts/4f3227e6.html"/>
      <url>/posts/4f3227e6.html</url>
      
        <content type="html"><![CDATA[<h1 id="vm安装"><a href="#vm安装" class="headerlink" title="vm安装"></a>vm安装</h1><ol><li>打开<a href="https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html">官网</a>下载</li><li>傻瓜式安装 根据自己电脑配置创建新的虚拟机  </li></ol><ul><li>设置安装文件存储位置<img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230726120015.png" alt=""></li><li>选择iso镜像文件 <img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230726120219.png" alt=""></li><li>启动<h1 id="cetos安装"><a href="#cetos安装" class="headerlink" title="cetos安装"></a>cetos安装</h1></li><li>选择中文语言 <img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230726120326.png" alt=""></li><li>修改日期和时间 <img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230726120417.png" alt=""></li><li>选择安装位置（也可以默认安装） <img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230726120519.png" alt=""><br>添加新的挂载点 <ol><li>/boot 1G 文件系统ext4 </li><li>swap（虚拟内存） 4G 文件系统swap</li><li>/(根目录) 45G 文件系统xfs<br>1+4+45刚好等于分配的50G内存</li></ol></li><li>KDUMP（备份）按需开启</li><li>配置主机名</li><li>安全策略默认(打开)</li><li>配置密码</li><li>重启后傻瓜式安装</li><li>打开编辑器-&gt;虚拟网络编辑器 <img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230726132936.png" alt=""></li><li><p>选择vmnet8更改设置<br><img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230726133120.png" alt=""><br>选择vmnet8修改子网ip<img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230726133258.png" alt=""><br>修改nat设置<img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230726133647.png" alt=""><br>打开windows以太网，更改适配器选项选项vmnet8<img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230726133854.png" alt=""></p><p>修改网关vim /etc/sysconfig/network-scripts/ifcfg-ens33 <img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230726134731.png" alt=""><br>主机名称vim /etc/hostname （自己按需修改）<br>reboot后切换root用户登录终端输入ifconfig查看ip是否修改成功，输入hostname查看主机名称是否修改成功</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> vmware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vmware </tag>
            
            <tag> centos </tag>
            
            <tag> linux </tag>
            
            <tag> hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yarn入门</title>
      <link href="/posts/9236725a.html"/>
      <url>/posts/9236725a.html</url>
      
        <content type="html"><![CDATA[<h1 id="YARN架构概述"><a href="#YARN架构概述" class="headerlink" title="YARN架构概述"></a>YARN架构概述</h1><ol><li>YetAnother Resource Negotiator简称YARN，另一种资源协调者，是Hadoop的资源管理器<ol><li>ResourceManager（RM）：整个集群资源（cpu内存等）的老大</li><li>NodeManager（NM）：单节点服务器资源老大</li><li>ApplicationManager（AM）单个任务运行的老大</li><li>Container：容器，相当于一台独立服务器，里面封装了任务运行所需要的资源，<strong>如内存、cpu、磁盘、网络等</strong></li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop </tag>
            
            <tag> yarn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop入门</title>
      <link href="/posts/67914616.html"/>
      <url>/posts/67914616.html</url>
      
        <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><ol><li>Hadoop是什么<ul><li>Hadoop Apache基金会开发的分布式系统基础架构 Hadoop主要解决海量数据的存储和海量数据的分析计算</li></ul></li><li>Hadoop发展历史<ul><li>创始人Doug Cutting为了实现Google类似的全文检索功能,基于Lucene框架进行优化查询</li><li>2001年成底Lucene为Apache基金会的一个子项目</li><li>对于海量数据的场景，Lucene框架面对Google同样的困难，<strong>存储海量数据困难，检索海量数据慢</strong></li><li>学习和模仿Google解决这些问题的办法：微型版Nutch</li><li>2003-2004年google公开了不跟GFS和MapReduce思想的细节，以此为基础Doug Vutting等人用两年业余时间实现了DFS和MapReduce机制，使Nutch性能飙升</li><li>2005年Hadoop作为Lucene的子项目Nutch的一部分正式引入Apache基金会</li><li>2006年三月份Map-Reduce和Nutch Distributed File System (NDFS) 分别被纳入到Hadoop项目中，Hadoop就此诞生，标志着大数据时代来临</li><li>名字来源于Doug Cutting儿子的玩具大象 </li></ul></li><li>Hadoop三大发行版本：Apache、Cloudera、Hortonworks。<ul><li>Apache版本最原始（最基础）的版本，对于入门学习最好  2006年</li><li>Cloudera内部集成了很多大数据框架，对应产品CDH。2008</li><li>Hortonworks 文档较好，对应产品HDP。 2011</li><li>Hortonworks现在已经被Cloudera公司收购，推出新的品牌CDP</li></ul></li><li>Hadoop优势<ul><li>高可靠性：Hadoop底层维护多个数据副本，所以及时和Hadoop某个计算元素或存储出现故障，也不会导致数据的丢失  <img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230725180729.png" alt=""></li><li>高扩展性：在集群间分配任务数据，可方便的扩展数以千计的节点  <img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230725180851.png" alt="">  <img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230725180937.png" alt=""></li><li>高效性：在MapReduce的思想下，Hadoop是并行工作的，以加快任务处理速度  <img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230725181139.png" alt=""></li><li>高容错性：能够自动将失败的任务重新分配  <img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230725181232.png" alt=""></li></ul></li><li>Hadoop组成（重点）<br> <img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230725181536.png" alt=""><ul><li>HDFS架构概述<ol><li>Hadoop Distributed File System，简称HDFS，是一个分布式文件系统。  <img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230725182106.png" alt=""><ul><li>NameNode(nm):存储文件的元数据，如文件名，文件目录结构，文件属性（生成时间、副本数、文件权限），以及每个文件的块列表所在的DatNode等</li><li>DataNode(dn)在本地文件系统存储文件块数据，以及块数据的校验和</li><li>Secondary NameNode（2nn）：每隔一段时间对NameNode元数据备份<br><br>形象图  <img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230725182530.png" alt=""></li></ul></li><li><a href="yarn%E5%85%A5%E9%97%A8.md">yarn架构概述</a><ul><li><img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230726092939.png" alt=""></li></ul></li><li>MapReduce<ul><li><img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230726093200.png" alt=""></li></ul></li><li>JDFS、YARN、MapReduce三者关系<ul><li><img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230726094014.png" alt=""></li></ul></li></ol></li></ul></li><li>大数据技术生态体系<ul><li><img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230726094907.png" alt=""></li></ul></li><li>推荐系统案例  <ul><li><h1 id="环境准备-前戏"><a href="#环境准备-前戏" class="headerlink" title="环境准备(前戏)"></a>环境准备(前戏)</h1></li></ul></li><li>模板虚拟机的准备</li><li>克隆</li><li>安装JDK、Hadoop<h1 id="Hadoop生产集群搭建"><a href="#Hadoop生产集群搭建" class="headerlink" title="Hadoop生产集群搭建"></a>Hadoop生产集群搭建</h1><h2 id="本地模式"><a href="#本地模式" class="headerlink" title="本地模式"></a>本地模式</h2><h2 id="完全分布式集群-重点"><a href="#完全分布式集群-重点" class="headerlink" title="完全分布式集群*重点"></a>完全分布式集群*重点</h2><h2 id="配置历史服务器"><a href="#配置历史服务器" class="headerlink" title="配置历史服务器"></a>配置历史服务器</h2><ul><li><ol><li>vim mapred-site.xml   <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 历史服务器端地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop102:10020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 历史服务器web端地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop102:19888<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">```  </span><br><span class="line">+ 2. 配置完成记得分发  xsync $HADOOP_HOME/etc/hadoop/mapred-site.xml</span><br><span class="line">+ 3. 配置日志聚集功能 配置yarn-site.xml</span><br><span class="line">```xml </span><br><span class="line"><span class="comment">&lt;!-- 开启日志聚集功能 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.log-aggregation-enable<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 设置日志聚集服务器地址 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.log.server.url<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>http://hadoop102:19888/jobhistory/logs<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 设置日志保留时间为7天 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.log-aggregation.retain-seconds<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>604800<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li><li>xsync分发配置<h2 id="集群遭到破坏"><a href="#集群遭到破坏" class="headerlink" title="集群遭到破坏"></a>集群遭到破坏</h2></li><li><ol><li>停掉进程</li></ol></li><li><ol><li>删除集群内的data 和logs文件夹</li></ol></li><li><ol><li>格式化hdfs namenode -format</li></ol></li><li><ol><li>启动集群<h2 id="集群启动和停止方式总结"><a href="#集群启动和停止方式总结" class="headerlink" title="集群启动和停止方式总结"></a>集群启动和停止方式总结</h2></li></ol></li></ul><ol><li>各个模块分开启动/停止（配置ssh是前提）常用</li></ol><ul><li>整体启动/停止HDFS<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-dfs.sh/stop-dfs.sh     </span><br></pre></td></tr></table></figure></li><li>整体启动/停止YARN<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-yarn.sh/stop-yarn.sh</span><br></pre></td></tr></table></figure></li></ul><ol><li>各个服务组件逐一启动/停止</li></ol><ul><li>分别启动/停止HDFS组件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs --daemon start/stop namenode/datanode/secondarynamenode</span><br></pre></td></tr></table></figure></li><li>启动/停止YARN<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn --daemon start/stop  resourcemanager/nodemanager</span><br></pre></td></tr></table></figure><h2 id="编写Hadoop集群常用脚本"><a href="#编写Hadoop集群常用脚本" class="headerlink" title="编写Hadoop集群常用脚本"></a>编写Hadoop集群常用脚本</h2></li></ul><ol><li>Hadoop集群启停脚本（包含HDFS，Yarn，Historyserver） vim home/fangechao6/bin/vim myhadoop.sh<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;No Args Input...&quot;</span><br><span class="line">   exit ;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)</span><br><span class="line">      echo &quot; =================== 启动 hadoop集群 ===================&quot;</span><br><span class="line"></span><br><span class="line">      echo &quot; --------------- 启动 hdfs ---------------&quot;</span><br><span class="line">      ssh hadoop102 &quot;/opt/module/hadoop-3.1.3/sbin/start-dfs.sh&quot;</span><br><span class="line">      echo &quot; --------------- 启动 yarn ---------------&quot;</span><br><span class="line">      ssh hadoop103 &quot;/opt/module/hadoop-3.1.3/sbin/start-yarn.sh&quot;</span><br><span class="line">      echo &quot; --------------- 启动 historyserver ---------------&quot;</span><br><span class="line">      ssh hadoop102 &quot;/opt/module/hadoop-3.1.3/bin/mapred --daemon start historyserver&quot;</span><br><span class="line">;;</span><br><span class="line">&quot;stop&quot;)</span><br><span class="line">      echo &quot; =================== 关闭 hadoop集群 ===================&quot;</span><br><span class="line"></span><br><span class="line">      echo &quot; --------------- 关闭 historyserver ---------------&quot;</span><br><span class="line">      ssh hadoop102 &quot;/opt/module/hadoop-3.1.3/bin/mapred --daemon stop historyserver&quot;</span><br><span class="line">      echo &quot; --------------- 关闭 yarn ---------------&quot;</span><br><span class="line">      ssh hadoop103 &quot;/opt/module/hadoop-3.1.3/sbin/stop-yarn.sh&quot;</span><br><span class="line">      echo &quot; --------------- 关闭 hdfs ---------------&quot;</span><br><span class="line">      ssh hadoop102 &quot;/opt/module/hadoop-3.1.3/sbin/stop-dfs.sh&quot;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">   echo &quot;Input Args Error...&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure></li><li>查看三台服务器Java进程脚本：jpsall  vim/home/fangechao6/bin/jpsall<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">for host in hadoop102 hadoop103 hadoop104</span><br><span class="line">do</span><br><span class="line">      echo =============== $host ===============</span><br><span class="line">      ssh $host jps </span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="集群时间同步"><a href="#集群时间同步" class="headerlink" title="集群时间同步"></a>集群时间同步</h2><strong>如果服务器在公网环境（能连接外网），可以不采用集群时间同步，因为服务器会定期和公网时间进行校准；<br>如果服务器在内网环境，必须要配置集群时间同步，否则时间久了，会产生时间偏差，导致集群执行任务时间不同步。</strong></li></ol></li><li><p>被同步时间服务器执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status ntpd</span><br><span class="line">sudo systemctl start ntpd</span><br><span class="line">sudo systemctl is-enabled ntpd</span><br></pre></td></tr></table></figure><p>修改服务器的ntp.conf配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/ntp.conf</span><br></pre></td></tr></table></figure><p>找到 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#restrict 192.168.10.0 mask 255.255.255.0 nomodify notrap</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">restrict 192.168.10.0 mask 255.255.255.0 nomodify notrap</span><br></pre></td></tr></table></figure><p>注释或删除以下代码 </p><figure class="highlight plaintext"><figcaption><span>0.centos.pool.ntp.org iburst</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server 1.centos.pool.ntp.org iburst</span><br><span class="line">server 2.centos.pool.ntp.org iburst</span><br><span class="line">server 3.centos.pool.ntp.org iburst**</span><br><span class="line">文件末尾追加 **server 127.127.1.0</span><br><span class="line">fudge 127.127.1.0 stratum 10</span><br></pre></td></tr></table></figure><p>修改hadoop102的/etc/sysconfig/ntpd 文件添加如下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#让硬件时间与系统时间一起同步</span><br><span class="line">SYNC_HWCLOCK=yes</span><br></pre></td></tr></table></figure><p>被同步服务器执行如下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop ntpd</span><br><span class="line">sudo systemctl disable ntpd</span><br><span class="line">sudo systemctl stop ntpd</span><br><span class="line">sudo systemctl disable ntpd</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置1分钟与时间服务器同步一次</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo crontab -e</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * /usr/sbin/ntpdate hadoop102</span><br></pre></td></tr></table></figure><p>接下来修改同步时间服务器时间等待自动同步判断是否修改成功</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop </tag>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>监视属性</title>
      <link href="/posts/b1c89471.html"/>
      <url>/posts/b1c89471.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算属性</title>
      <link href="/posts/f3cd2de6.html"/>
      <url>/posts/f3cd2de6.html</url>
      
        <content type="html"><![CDATA[<h1 id="vue计算属性"><a href="#vue计算属性" class="headerlink" title="vue计算属性"></a>vue计算属性</h1><ol><li>定义：要用的属性不存在，要通过已有的属性计算得来的</li><li>原理：底层就借助了Object.defineproperty方法提供的getter和setter</li><li>get函数什么时候执行<ul><li>初次读取时会执行一次</li><li>当依赖的数据发生改变时会被再次调用</li></ul></li><li>优势：与methods实现相比，内部有缓存机制（复用），效率更高，调试方便。</li><li>备注<ul><li>计算属性最终会出现在vm上，直接读取使用即可</li><li>如果计算属性要被修改，那必须写set函数去响应修改。且set中要引起计算时依赖的数据发生变化<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  姓名<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">firstName</span>:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">lastName</span>:<span class="string">&#x27;三&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//完整写法</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// fullName:&#123;</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//     get()&#123;</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//             return this.firstName+&quot;-&quot;+this.lastName</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//     &#125;,</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//     set(value)&#123;</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//       const arr = value.split(&#x27;-&#x27;)</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//       this.firstName = arr[0]</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//       this.lastName = arr[1]</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//  &#125;</span></span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//简写</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">fullName</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span>+<span class="string">&#x27;-&#x27;</span>+<span class="variable language_">this</span>.<span class="property">lastName</span></span></span><br><span class="line"><span class="language-javascript">           &#125;</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue简介</title>
      <link href="/posts/a231bb16.html"/>
      <url>/posts/a231bb16.html</url>
      
        <content type="html"><![CDATA[<h1 id="vue特点"><a href="#vue特点" class="headerlink" title="vue特点"></a>vue特点</h1><ol><li>采用组件化模式，提高代码复用率、且让代码更好维护</li><li>声明式编码，让编码人员无需直接操作DOM，提高开发效率</li><li>使用虚拟DOM+优秀的Diff算法，尽量复用DOM节点<h1 id="MVVM模型"><a href="#MVVM模型" class="headerlink" title="MVVM模型"></a>MVVM模型</h1></li><li>M模型：对应data中的数据</li><li>V视图：模板</li><li>VM视图模型：vue实例对象    <img src="https://hexo-butterfly-bucket.oss-cn-shanghai.aliyuncs.com/img/mdImg/20230725082917.png" alt=""><h4 id="观察发现"><a href="#观察发现" class="headerlink" title="观察发现:"></a>观察发现:</h4></li><li>data中所有属性，最后都出现在vm身上</li><li>vm上所有的属性及原型上所有的属性，在vue模板中都可以直接使用</li></ol><h1 id="事件的基本使用："><a href="#事件的基本使用：" class="headerlink" title="事件的基本使用："></a>事件的基本使用：</h1><ol><li>使用v-on:xxx或@xxx绑定事件，其中xxx是事件名</li><li>事件的回调需要配置在methods对象中，最终会在vm上</li><li>methods中配置的函数，不要用箭头函数！箭头函数会改变this的指向</li><li>methods中配置的函数，都是被vue所管理的函数，this志向是vm或实例对象</li><li>@click=”demo”和@click=”demo($event)”效果一致，但后者传参不会丢失event<ul><li><h2 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符   ."></a>事件修饰符   .</h2></li></ul></li><li>prevent: 组织默认事件(常用)</li><li>stop: 阻止事件冒泡(常用)</li><li>once: 事件只触发一次(常用)</li><li>capture: 使用事件的捕获模式</li><li>self: 只有event.target是当前操作的元素时才触发事件</li><li>passive: 事件的默认行为立即执行，无需等待事件回调执行完毕<ul><li><h2 id="Vue中的按键："><a href="#Vue中的按键：" class="headerlink" title="Vue中的按键："></a>Vue中的按键：</h2></li></ul></li><li>常用按键别名<ul><li>回车 =&gt; enter</li><li>删除 =&gt; delete(捕获“删除”和“退格”)</li><li>退出 =&gt; esc</li><li>空格 =&gt; space</li><li>换行 =&gt; tab  </li><li>上   =&gt; up</li><li>下   =&gt; down</li><li>左   =&gt; left</li><li>右   =&gt; right </li></ul></li><li>vue 中未提供的别名案件，可以使用按键原始key值去绑定，但注意要转为kebab=case(短横线命名)</li><li>系统修饰键(用法特殊):ctrl alt shift meta（窗户键）<ul><li>配合keyup使用：按下修饰键的同时，再按下其他键，随后释放其他键，事件才能被触发。</li><li>配合keydown使用：正常触发事件</li></ul></li><li>也可以使用keyCode去指定具体按键（不推荐）</li><li>Vue.config.keyCodes.自定义键名 = 键码，可以去定制按键别名 </li><li>修饰符可以连续写 都可以级联的方式例如 @click.prevent.stop可以阻止冒泡也可以阻止跳转，@keyup.ctrl必须按下ctrl和y才触发  和与顺序无关</li></ol>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"fangechao6`Blog","short_name":"fangechao6","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;  }@font-face {    font-family: 'iconfont';    src: url('/fonts/iconfont.eot');    src: url('/fonts/iconfont.eot?#iefix') format('embedded-opentype'),    url('/fonts/iconfont.woff2') format('woff2'),    url('/fonts/iconfont.woff') format('woff'),    url('/fonts/iconfont.ttf') format('truetype'),    url('/fonts/iconfont.svg#iconfont') format('svg');}    div#menus {    font-family: "ZhuZiAYuanJWD";  }  h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;  }  a.article-title,  a.blog-slider__title,  a.categoryBar-list-link,  h1.post-title {    font-family: ZhuZiAYuanJWD;  }    .iconfont {    font-family: "iconfont" !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }    /* 时间轴生肖icon */  svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;  }    .icon-zhongbiao::before {    color: #f7c768;  }    /* bilibli番剧插件 */  #article-container .bangumi-tab.bangumi-active {    background: var(--anzhiyu-theme);    color: var(--anzhiyu-ahoverbg);    border-radius: 10px;  }  a.bangumi-tab:hover {    text-decoration: none !important;  }  .bangumi-button:hover {    background: var(--anzhiyu-theme) !important;    border-radius: 10px !important;    color: var(--anzhiyu-ahoverbg) !important;  }  a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;  }  .bangumi-button {    padding: 5px 10px !important;  }    a.bangumi-tab {    padding: 5px 10px !important;  }  svg.icon.faa-tada {    font-size: 1.1em;  }  .bangumi-info-item {    border-right: 1px solid #f2b94b;  }  .bangumi-info-item span {    color: #f2b94b;  }  .bangumi-info-item em {    color: #f2b94b;  }    /* 解决artitalk的图标问题 */  #uploadSource > svg {    width: 1.19em;    height: 1.5em;  }    /*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */  #page-header:not(.not-top-img):before {    background-color: transparent !important;  }    /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: rgba(255, 255, 255, 0.9);  }    /* 首页侧栏卡片 */  #aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);  }    /* 文章页面正文背景 */  div#post {    background: rgba(255, 255, 255, 0.9);  }    /* 分页页面 */  div#page {    background: rgba(255, 255, 255, 0.9);  }    /* 归档页面 */  div#archive {    background: rgba(255, 255, 255, 0.9);  }    /* 标签页面 */  div#tag {    background: rgba(255, 255, 255, 0.9);  }    /* 分类页面 */  div#category {    background: rgba(255, 255, 255, 0.9);  }    /*夜间模式伪类遮罩层透明*/  [data-theme="dark"] #recent-posts > .recent-post-item {    background: #121212;  }    [data-theme="dark"] .card-widget {    background: #121212 !important;  }    [data-theme="dark"] div#post {    background: #121212 !important;  }    [data-theme="dark"] div#tag {    background: #121212 !important;  }    [data-theme="dark"] div#archive {    background: #121212 !important;  }    [data-theme="dark"] div#page {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: transparent !important;  }  /* 页脚透明 */  #footer {    background: transparent !important;  }    /* 头图透明 */  #page-header {    background: transparent !important;  }    #rightside > div > button {    border-radius: 5px;  }    /* 滚动条 */    ::-webkit-scrollbar {    width: 10px;    height: 10px;  }    ::-webkit-scrollbar-thumb {    background-color: #3b70fc;    border-radius: 2em;  }    ::-webkit-scrollbar-corner {    background-color: transparent;  }    ::-moz-selection {    color: #fff;    background-color: #3b70fc;  }    /* 音乐播放器 */    /* .aplayer .aplayer-lrc {    display: none !important;  } */    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */  }    .aplayer.aplayer-fixed {    z-index: 999999 !important;  }    /* 评论框  */  .vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;  }    /* 设置评论框 */    .vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;  }    /* md网站下划线 */  #article-container a:hover {    text-decoration: none !important;  }    #article-container #hpp_talk p img {    display: inline;  }    /* 404页面 */  #error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);  }    #error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;  }    #error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #3b70fc;    background-position: center;    background-size: cover;  }    #error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;  }  #error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;  }  #error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;  }  #error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);  }    #body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;  }    #body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;  }    #body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;  }    #body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;  }    #body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--anzhiyu-card-bg);    display: flex;  }    #body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;  }    #body-wrap.error .aside-list .aside-list-item .content time {    display: none;  }    /* 代码框主题 */  #article-container figure.highlight {    border-radius: 10px;  }/*  .iconfont {    font-family: "iconfont" !important;    font-size: 16px;    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }  */  .icon-QQ:before {    content: "\e882";  }    .icon-github:before {    content: "\e712";  }    .icon-youxiang:before {    content: "\e908";  }    .icon-fenlei:before {    content: "\e603";  }    .icon-bilibili_fuzhi:before {    content: "\e61f";  }  ]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/fonts/iconfont.css"/>
      <url>/fonts/iconfont.css</url>
      
        <content type="html"><![CDATA[@font-face {  font-family: "iconfont"; /* Project id 4179815 */  /* Color fonts */  src:        url('iconfont.woff2?t=1690154909328') format('woff2'),       url('iconfont.woff?t=1690154909328') format('woff'),       url('iconfont.ttf?t=1690154909328') format('truetype');}.iconfont {  font-family: "iconfont" !important;  font-size: 16px;  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.icon-QQ:before {  content: "\e882";}.icon-github:before {  content: "\e712";}.icon-youxiang:before {  content: "\e908";}.icon-fenlei:before {  content: "\e603";}.icon-bilibili_fuzhi:before {  content: "\e61f";}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js/npm.elemecdn.com_anzhiyu-blog@2.0.4_js_runtime_runtime.min.js"/>
      <url>/js/runtime.js/npm.elemecdn.com_anzhiyu-blog@2.0.4_js_runtime_runtime.min.js</url>
      
        <content type="html"><![CDATA[var now = new Date();function createtime() {  var t = new Date("07/23/2023 00:00:00");  now.setTime(now.getTime() + 250);  var e = (now - t) / 1e3 / 60 / 60 / 24,    a = Math.floor(e),    n = (now - t) / 1e3 / 60 / 60 - 24 * a,    r = Math.floor(n);  1 == String(r).length && (r = "0" + r);  var s = (now - t) / 1e3 / 60 - 1440 * a - 60 * r,    i = Math.floor(s);  1 == String(i).length && (i = "0" + i);  var o = (now - t) / 1e3 - 86400 * a - 3600 * r - 60 * i,    l = Math.round(o);  1 == String(l).length && (l = "0" + l);  let g = "";  (g =    r < 18 && r >= 9      ? `<img class='boardsign' src='https://npm.elemecdn.com/anzhiyu-blog@2.0.3/img/badge/安知鱼-上班摸鱼中.svg' title='距离月入25k也就还差一个大佬带我~'><span class='textTip'> <br> 本站居然运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`      : `<img class='boardsign' src='https://npm.elemecdn.com/anzhiyu-blog@2.0.3/img/badge/安知鱼-下班啦.svg' title='下班了就该开开心心的玩耍，嘿嘿~'><span class='textTip'> <br> 本站居然运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`),    document.getElementById("workboard") &&      (document.getElementById("workboard").innerHTML = g);}setInterval(() => {  createtime();}, 250);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/fonts/iconfont.js"/>
      <url>/fonts/iconfont.js</url>
      
        <content type="html"><![CDATA[window._iconfont_svg_string_4179815='<svg><symbol id="icon-QQ" viewBox="0 0 1024 1024"><path d="M824.8 613.2c-16-51.4-34.4-94.6-62.7-165.3C766.5 262.2 689.3 112 511.5 112 331.7 112 256.2 265.2 261 447.9c-28.4 70.8-46.7 113.7-62.7 165.3-34 109.5-23 154.8-14.6 155.8 18 2.2 70.1-82.4 70.1-82.4 0 49 25.2 112.9 79.8 159-26.4 8.1-85.7 29.9-71.6 53.8 11.4 19.3 196.2 12.3 249.5 6.3 53.3 6 238.1 13 249.5-6.3 14.1-23.8-45.3-45.7-71.6-53.8 54.6-46.2 79.8-110.1 79.8-159 0 0 52.1 84.6 70.1 82.4 8.5-1.1 19.5-46.4-14.5-155.8z"  ></path></symbol><symbol id="icon-github" viewBox="0 0 1024 1024"><path d="M950.857143 512q0 143.428571-83.714286 258t-216.285714 158.571429q-15.428571 2.857143-22.571429-4t-7.142857-17.142857l0-120.571429q0-55.428571-29.714286-81.142857 32.571429-3.428571 58.571429-10.285714t53.714286-22.285714 46.285714-38 30.285714-60 11.714286-86q0-69.142857-45.142857-117.714286 21.142857-52-4.571429-116.571429-16-5.142857-46.285714 6.285714t-52.571429 25.142857l-21.714286 13.714286q-53.142857-14.857143-109.714286-14.857143t-109.714286 14.857143q-9.142857-6.285714-24.285714-15.428571t-47.714286-22-49.142857-7.714286q-25.142857 64.571429-4 116.571429-45.142857 48.571429-45.142857 117.714286 0 48.571429 11.714286 85.714286t30 60 46 38.285714 53.714286 22.285714 58.571429 10.285714q-22.857143 20.571429-28 58.857143-12 5.714286-25.714286 8.571429t-32.571429 2.857143-37.428571-12.285714-31.714286-35.714286q-10.857143-18.285714-27.714286-29.714286t-28.285714-13.714286l-11.428571-1.714286q-12 0-16.571429 2.571429t-2.857143 6.571429 5.142857 8 7.428571 6.857143l4 2.857143q12.571429 5.714286 24.857143 21.714286t18 29.142857l5.714286 13.142857q7.428571 21.714286 25.142857 35.142857t38.285714 17.142857 39.714286 4 31.714286-2l13.142857-2.285714q0 21.714286 2.857143 50.857143t2.857143 30.857143q0 10.285714-7.428571 17.142857t-22.857143 4q-132.571429-44-216.285714-158.571429t-83.714286-258q0-119.428571 58.857143-220.285714t159.714286-159.714286 220.285714-58.857143 220.285714 58.857143 159.714286 159.714286 58.857143 220.285714z"  ></path></symbol><symbol id="icon-youxiang" viewBox="0 0 1024 1024"><path d="M838.954667 234.666667H170.666667c-3.626667 0-7.168 0.448-10.56 1.322666l323.690666 323.669334a21.333333 21.333333 0 0 0 30.165334 0L838.954667 234.666667z m46.144 14.186666l-260.693334 260.693334 262.933334 262.912c5.44-7.168 8.661333-16.106667 8.661333-25.792V277.333333c0-10.944-4.117333-20.906667-10.88-28.48zM843.861333 789.333333l-249.6-249.621333-50.133333 50.133333a64 64 0 0 1-90.517333 0l-50.112-50.133333L156.373333 786.88c4.48 1.578667 9.28 2.453333 14.314667 2.453333h673.194667zM128.661333 754.218667L373.333333 509.525333 129.578667 265.813333A42.709333 42.709333 0 0 0 128 277.333333v469.333334c0 2.56 0.213333 5.098667 0.661333 7.552zM170.666667 192h682.666666a85.333333 85.333333 0 0 1 85.333334 85.333333v469.333334a85.333333 85.333333 0 0 1-85.333334 85.333333H170.666667a85.333333 85.333333 0 0 1-85.333334-85.333333V277.333333a85.333333 85.333333 0 0 1 85.333334-85.333333z" fill="#333333" ></path></symbol><symbol id="icon-fenlei" viewBox="0 0 1024 1024"><path d="M487 347.43C487 424.512 424.512 487 347.43 487H237.57C160.488 487 98 424.512 98 347.43V237.57C98 160.488 160.488 98 237.57 98h109.86C424.512 98 487 160.488 487 237.57v109.86zM487 786.43C487 863.512 424.512 926 347.43 926H237.57C160.488 926 98 863.512 98 786.43V676.57C98 599.488 160.488 537 237.57 537h109.86C424.512 537 487 599.488 487 676.57v109.86zM926 347.43C926 424.512 863.512 487 786.43 487H676.57C599.488 487 537 424.512 537 347.43V237.57C537 160.488 599.488 98 676.57 98h109.86C863.512 98 926 160.488 926 237.57v109.86zM730.7 533.6c-107.861 0-195.3 87.439-195.3 195.3s87.439 195.3 195.3 195.3S926 836.761 926 728.9s-87.439-195.3-195.3-195.3z m0 309.734c-63.2 0-114.435-51.234-114.435-114.434S667.5 614.465 730.7 614.465 845.134 665.7 845.134 728.9 793.9 843.334 730.7 843.334z" fill="#666666" ></path></symbol><symbol id="icon-bilibili_fuzhi" viewBox="0 0 1877 1024"><path d="M686.201363 402.276504c-1.835615-77.09203-68.832711-91.776948-68.832711-91.776948s-52.317867-0.419081-120.362667-0.768l49.353956-47.830282s7.954963-9.790578-5.506845-20.803318c-13.458015-11.013689-14.186193-6.117452-18.717392-3.057778-4.124444 2.783763-63.300267 61.041778-73.882548 71.470459-32.636207-0.128948-66.72403-0.220919-99.047349-0.233244l26.585126-0.003793s-70.97363-70.011259-75.504829-73.069037c-4.5312-3.059674-5.25843-7.955911-18.719289 3.057778-13.459911 11.013689-5.506844 20.804267-5.506845 20.804266l50.783763 49.21363h2.813156c-56.318104 0.039822-104.860444 0.363141-127.124859 1.219319-71.586133 20.190815-66.078341 91.776948-66.078341 91.776948s0.916859 153.2672-0.097659 230.820029c7.702756 77.550933 67.553659 89.940385 67.553659 89.940386s23.862044 0.457956 41.299437 0.457955c1.835615 5.047941 3.212326 29.369837 30.286696 29.376474 27.07437 0.006637 30.286696-29.376474 30.286697-29.376474s198.240711-0.917807 214.761244-0.917807c0.917807 8.260267 5.047941 30.7456 32.121363 30.286696 27.07437-0.457956 28.909985-32.122311 28.909985-32.122311s9.178074-0.917807 36.711348 0c64.243674-11.931496 67.914904-87.187911 67.914904-87.187911s-0.917807-154.185007 0-231.277037zM630.926222 647.629748c0 12.163793-9.631289 22.025481-21.510637 22.025482H218.648652c-11.880296 0-21.510637-9.861689-21.510637-22.025482V388.818489c0-12.164741 9.629393-22.02643 21.510637-22.02643h390.766933c11.879348 0 21.510637 9.862637 21.510637 22.02643v258.811259z" fill="#03A5DD" ></path><path d="M238.280059 461.906489l114.722134-22.02643 8.718222 43.136-113.803378 22.025482zM595.292919 461.906489l-114.722134-22.02643-8.718222 43.136 113.803378 22.025482zM361.720415 568.826311s25.238756 45.430519 53.230933-14.68397c27.07437 58.737778 56.902163 15.570489 56.902163 15.570489l16.978489 11.044029s-31.663407 50.937363-73.421748 12.3904c-35.333689 38.546015-72.503941-12.292741-72.503941-12.29274l18.814104-12.028208z" fill="#03A5DD" ></path><path d="M764.563911 314.604089l81.988267-30.592948s-6.122193 244.125393 11.6224 284.505126c58.73683-9.785837 180.49517 18.9696 197.016652 55.68 13.457067 37.937304-32.431407 101.568474-234.339556 111.358103-6.728059-89.332622-7.341511-186.919822-56.287763-420.950281z" fill="#03A5DD" ></path><path d="M1086.55597 704.960474l41.608534-6.119348s-13.457067-178.658607-20.803319-184.164504c-7.342459-5.506844-51.395319 4.894341-54.453096 5.506845-3.063467 0.609659 33.647881 184.777007 33.647881 184.777007zM1048.009956 495.711763l21.41677-3.67123s-9.785837-66.691793-10.708385-70.363022c-4.399407-0.666548-24.7808 5.506844-24.7808 5.506845l14.072415 68.527407zM1069.426726 419.231289s24.474548-1.225007 27.531378 0c1.436444 5.204385 6.1184 71.587081 6.1184 71.587081s-20.192711-1.836563-25.085156 0c-2.449067-11.626193-8.564622-71.587081-8.564622-71.587081z" fill="#03A5DD" ></path><path d="M1109.194904 339.692089s30.591052 152.215704 45.27597 343.852563c18.3552 3.67123 36.711348 0 36.711348 0s-25.698607-335.285096-25.698607-343.852563c0-8.570311-56.288711 0-56.288711 0z" fill="#03A5DD" ></path><path d="M1227.403378 711.156622l41.99917-2.166518s3.454104-179.131733-3.338429-185.306074c-6.792533-6.174341-51.625719 0.023704-54.730904 0.345126-3.103289 0.320474 16.070163 187.127467 16.070163 187.127466zM1208.769422 499.205689l21.666134-1.633659s-3.454104-67.318519-4.022045-71.059911c-4.318815-1.077096-25.1904 3.143111-25.1904 3.143111l7.546311 69.550459zM1237.304889 425.088s24.481185 1.09037 27.410015 2.59603c0.933926 5.316267-0.662756 71.843081-0.662756 71.843081s-19.931022-3.730963-24.974222-2.36563c-1.339733-11.804444-1.773037-72.073481-1.773037-72.073481z" fill="#03A5DD" ></path><path d="M1280.348919 314.604089l81.989214-30.592948s-6.122193 244.125393 11.623348 284.505126c58.737778-9.785837 180.494222 18.9696 197.015704 55.68 13.458015 37.937304-32.429511 101.568474-234.338607 111.358103-6.730904-89.332622-7.343407-186.919822-56.289659-420.950281z" fill="#03A5DD" ></path><path d="M1602.341926 704.960474l41.606637-6.119348s-13.457067-178.658607-20.800474-184.164504c-7.344356-5.506844-51.398163 4.894341-54.454993 5.506845-3.062519 0.609659 33.64883 184.777007 33.64883 184.777007zM1563.795911 495.711763l21.41677-3.67123s-9.786785-66.691793-10.708385-70.363022c-4.399407-0.666548-24.7808 5.506844-24.7808 5.506845l14.072415 68.527407zM1585.212681 419.231289s24.474548-1.225007 27.531378 0c1.436444 5.204385 6.1184 71.587081 6.1184 71.587081s-20.192711-1.836563-25.086103 0c-2.448119-11.626193-8.563674-71.587081-8.563675-71.587081z" fill="#03A5DD" ></path><path d="M1624.980859 339.692089s30.593896 152.215704 45.277867 343.852563c18.3552 3.67123 36.711348 0 36.711348 0s-25.697659-335.285096-25.697659-343.852563c0-8.570311-56.291556 0-56.291556 0z" fill="#03A5DD" ></path><path d="M1743.192178 711.156622l41.99917-2.166518s3.453156-179.131733-3.338429-185.306074c-6.793481-6.174341-51.628563 0.023704-54.733749 0.345126-3.103289 0.320474 16.073007 187.127467 16.073008 187.127466zM1724.553481 499.205689l21.668978-1.633659s-3.453156-67.318519-4.02394-71.059911c-4.31597-1.077096-25.192296 3.143111-25.192297 3.143111l7.547259 69.550459zM1753.088 425.088s24.482133 1.09037 27.410015 2.59603c0.939615 5.316267-0.658963 71.843081-0.658963 71.843081s-19.932919-3.730963-24.977067-2.36563c-1.337837-11.804444-1.773985-72.073481-1.773985-72.073481z" fill="#03A5DD" ></path></symbol></svg>',function(l){var t=(t=document.getElementsByTagName("script"))[t.length-1],e=t.getAttribute("data-injectcss"),t=t.getAttribute("data-disable-injectsvg");if(!t){var c,i,n,s,o,a=function(t,e){e.parentNode.insertBefore(t,e)};if(e&&!l.__iconfont__svg__cssinject__){l.__iconfont__svg__cssinject__=!0;try{document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>")}catch(t){console&&console.log(t)}}c=function(){var t,e=document.createElement("div");e.innerHTML=l._iconfont_svg_string_4179815,(e=e.getElementsByTagName("svg")[0])&&(e.setAttribute("aria-hidden","true"),e.style.position="absolute",e.style.width=0,e.style.height=0,e.style.overflow="hidden",e=e,(t=document.body).firstChild?a(e,t.firstChild):t.appendChild(e))},document.addEventListener?~["complete","loaded","interactive"].indexOf(document.readyState)?setTimeout(c,0):(i=function(){document.removeEventListener("DOMContentLoaded",i,!1),c()},document.addEventListener("DOMContentLoaded",i,!1)):document.attachEvent&&(n=c,s=l.document,o=!1,h(),s.onreadystatechange=function(){"complete"==s.readyState&&(s.onreadystatechange=null,d())})}function d(){o||(o=!0,n())}function h(){try{s.documentElement.doScroll("left")}catch(t){return void setTimeout(h,50)}d()}}(window);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/fonts/iconfont.json"/>
      <url>/fonts/iconfont.json</url>
      
        <content type="html"><![CDATA[{"id":"4179815","name":"hexo butterfly 博客","font_family":"iconfont","css_prefix_text":"icon-","description":"","glyphs":[{"icon_id":"4936984","name":"QQ","font_class":"QQ","unicode":"e882","unicode_decimal":59522},{"icon_id":"929400","name":"github","font_class":"github","unicode":"e712","unicode_decimal":59154},{"icon_id":"4552970","name":"邮箱","font_class":"youxiang","unicode":"e908","unicode_decimal":59656},{"icon_id":"6027491","name":"分类","font_class":"fenlei","unicode":"e603","unicode_decimal":58883},{"icon_id":"19451956","name":"bilibili_复制","font_class":"bilibili_fuzhi","unicode":"e61f","unicode_decimal":58911}]}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js/ali_font.js"/>
      <url>/js/runtime.js/ali_font.js</url>
      
        <content type="html"><![CDATA[window._iconfont_svg_string_4179815='<svg><symbol id="icon-QQ" viewBox="0 0 1024 1024"><path d="M824.8 613.2c-16-51.4-34.4-94.6-62.7-165.3C766.5 262.2 689.3 112 511.5 112 331.7 112 256.2 265.2 261 447.9c-28.4 70.8-46.7 113.7-62.7 165.3-34 109.5-23 154.8-14.6 155.8 18 2.2 70.1-82.4 70.1-82.4 0 49 25.2 112.9 79.8 159-26.4 8.1-85.7 29.9-71.6 53.8 11.4 19.3 196.2 12.3 249.5 6.3 53.3 6 238.1 13 249.5-6.3 14.1-23.8-45.3-45.7-71.6-53.8 54.6-46.2 79.8-110.1 79.8-159 0 0 52.1 84.6 70.1 82.4 8.5-1.1 19.5-46.4-14.5-155.8z"  ></path></symbol><symbol id="icon-github" viewBox="0 0 1024 1024"><path d="M950.857143 512q0 143.428571-83.714286 258t-216.285714 158.571429q-15.428571 2.857143-22.571429-4t-7.142857-17.142857l0-120.571429q0-55.428571-29.714286-81.142857 32.571429-3.428571 58.571429-10.285714t53.714286-22.285714 46.285714-38 30.285714-60 11.714286-86q0-69.142857-45.142857-117.714286 21.142857-52-4.571429-116.571429-16-5.142857-46.285714 6.285714t-52.571429 25.142857l-21.714286 13.714286q-53.142857-14.857143-109.714286-14.857143t-109.714286 14.857143q-9.142857-6.285714-24.285714-15.428571t-47.714286-22-49.142857-7.714286q-25.142857 64.571429-4 116.571429-45.142857 48.571429-45.142857 117.714286 0 48.571429 11.714286 85.714286t30 60 46 38.285714 53.714286 22.285714 58.571429 10.285714q-22.857143 20.571429-28 58.857143-12 5.714286-25.714286 8.571429t-32.571429 2.857143-37.428571-12.285714-31.714286-35.714286q-10.857143-18.285714-27.714286-29.714286t-28.285714-13.714286l-11.428571-1.714286q-12 0-16.571429 2.571429t-2.857143 6.571429 5.142857 8 7.428571 6.857143l4 2.857143q12.571429 5.714286 24.857143 21.714286t18 29.142857l5.714286 13.142857q7.428571 21.714286 25.142857 35.142857t38.285714 17.142857 39.714286 4 31.714286-2l13.142857-2.285714q0 21.714286 2.857143 50.857143t2.857143 30.857143q0 10.285714-7.428571 17.142857t-22.857143 4q-132.571429-44-216.285714-158.571429t-83.714286-258q0-119.428571 58.857143-220.285714t159.714286-159.714286 220.285714-58.857143 220.285714 58.857143 159.714286 159.714286 58.857143 220.285714z"  ></path></symbol><symbol id="icon-youxiang" viewBox="0 0 1024 1024"><path d="M838.954667 234.666667H170.666667c-3.626667 0-7.168 0.448-10.56 1.322666l323.690666 323.669334a21.333333 21.333333 0 0 0 30.165334 0L838.954667 234.666667z m46.144 14.186666l-260.693334 260.693334 262.933334 262.912c5.44-7.168 8.661333-16.106667 8.661333-25.792V277.333333c0-10.944-4.117333-20.906667-10.88-28.48zM843.861333 789.333333l-249.6-249.621333-50.133333 50.133333a64 64 0 0 1-90.517333 0l-50.112-50.133333L156.373333 786.88c4.48 1.578667 9.28 2.453333 14.314667 2.453333h673.194667zM128.661333 754.218667L373.333333 509.525333 129.578667 265.813333A42.709333 42.709333 0 0 0 128 277.333333v469.333334c0 2.56 0.213333 5.098667 0.661333 7.552zM170.666667 192h682.666666a85.333333 85.333333 0 0 1 85.333334 85.333333v469.333334a85.333333 85.333333 0 0 1-85.333334 85.333333H170.666667a85.333333 85.333333 0 0 1-85.333334-85.333333V277.333333a85.333333 85.333333 0 0 1 85.333334-85.333333z" fill="#333333" ></path></symbol><symbol id="icon-fenlei" viewBox="0 0 1024 1024"><path d="M487 347.43C487 424.512 424.512 487 347.43 487H237.57C160.488 487 98 424.512 98 347.43V237.57C98 160.488 160.488 98 237.57 98h109.86C424.512 98 487 160.488 487 237.57v109.86zM487 786.43C487 863.512 424.512 926 347.43 926H237.57C160.488 926 98 863.512 98 786.43V676.57C98 599.488 160.488 537 237.57 537h109.86C424.512 537 487 599.488 487 676.57v109.86zM926 347.43C926 424.512 863.512 487 786.43 487H676.57C599.488 487 537 424.512 537 347.43V237.57C537 160.488 599.488 98 676.57 98h109.86C863.512 98 926 160.488 926 237.57v109.86zM730.7 533.6c-107.861 0-195.3 87.439-195.3 195.3s87.439 195.3 195.3 195.3S926 836.761 926 728.9s-87.439-195.3-195.3-195.3z m0 309.734c-63.2 0-114.435-51.234-114.435-114.434S667.5 614.465 730.7 614.465 845.134 665.7 845.134 728.9 793.9 843.334 730.7 843.334z" fill="#666666" ></path></symbol><symbol id="icon-bilibili_fuzhi" viewBox="0 0 1877 1024"><path d="M686.201363 402.276504c-1.835615-77.09203-68.832711-91.776948-68.832711-91.776948s-52.317867-0.419081-120.362667-0.768l49.353956-47.830282s7.954963-9.790578-5.506845-20.803318c-13.458015-11.013689-14.186193-6.117452-18.717392-3.057778-4.124444 2.783763-63.300267 61.041778-73.882548 71.470459-32.636207-0.128948-66.72403-0.220919-99.047349-0.233244l26.585126-0.003793s-70.97363-70.011259-75.504829-73.069037c-4.5312-3.059674-5.25843-7.955911-18.719289 3.057778-13.459911 11.013689-5.506844 20.804267-5.506845 20.804266l50.783763 49.21363h2.813156c-56.318104 0.039822-104.860444 0.363141-127.124859 1.219319-71.586133 20.190815-66.078341 91.776948-66.078341 91.776948s0.916859 153.2672-0.097659 230.820029c7.702756 77.550933 67.553659 89.940385 67.553659 89.940386s23.862044 0.457956 41.299437 0.457955c1.835615 5.047941 3.212326 29.369837 30.286696 29.376474 27.07437 0.006637 30.286696-29.376474 30.286697-29.376474s198.240711-0.917807 214.761244-0.917807c0.917807 8.260267 5.047941 30.7456 32.121363 30.286696 27.07437-0.457956 28.909985-32.122311 28.909985-32.122311s9.178074-0.917807 36.711348 0c64.243674-11.931496 67.914904-87.187911 67.914904-87.187911s-0.917807-154.185007 0-231.277037zM630.926222 647.629748c0 12.163793-9.631289 22.025481-21.510637 22.025482H218.648652c-11.880296 0-21.510637-9.861689-21.510637-22.025482V388.818489c0-12.164741 9.629393-22.02643 21.510637-22.02643h390.766933c11.879348 0 21.510637 9.862637 21.510637 22.02643v258.811259z" fill="#03A5DD" ></path><path d="M238.280059 461.906489l114.722134-22.02643 8.718222 43.136-113.803378 22.025482zM595.292919 461.906489l-114.722134-22.02643-8.718222 43.136 113.803378 22.025482zM361.720415 568.826311s25.238756 45.430519 53.230933-14.68397c27.07437 58.737778 56.902163 15.570489 56.902163 15.570489l16.978489 11.044029s-31.663407 50.937363-73.421748 12.3904c-35.333689 38.546015-72.503941-12.292741-72.503941-12.29274l18.814104-12.028208z" fill="#03A5DD" ></path><path d="M764.563911 314.604089l81.988267-30.592948s-6.122193 244.125393 11.6224 284.505126c58.73683-9.785837 180.49517 18.9696 197.016652 55.68 13.457067 37.937304-32.431407 101.568474-234.339556 111.358103-6.728059-89.332622-7.341511-186.919822-56.287763-420.950281z" fill="#03A5DD" ></path><path d="M1086.55597 704.960474l41.608534-6.119348s-13.457067-178.658607-20.803319-184.164504c-7.342459-5.506844-51.395319 4.894341-54.453096 5.506845-3.063467 0.609659 33.647881 184.777007 33.647881 184.777007zM1048.009956 495.711763l21.41677-3.67123s-9.785837-66.691793-10.708385-70.363022c-4.399407-0.666548-24.7808 5.506844-24.7808 5.506845l14.072415 68.527407zM1069.426726 419.231289s24.474548-1.225007 27.531378 0c1.436444 5.204385 6.1184 71.587081 6.1184 71.587081s-20.192711-1.836563-25.085156 0c-2.449067-11.626193-8.564622-71.587081-8.564622-71.587081z" fill="#03A5DD" ></path><path d="M1109.194904 339.692089s30.591052 152.215704 45.27597 343.852563c18.3552 3.67123 36.711348 0 36.711348 0s-25.698607-335.285096-25.698607-343.852563c0-8.570311-56.288711 0-56.288711 0z" fill="#03A5DD" ></path><path d="M1227.403378 711.156622l41.99917-2.166518s3.454104-179.131733-3.338429-185.306074c-6.792533-6.174341-51.625719 0.023704-54.730904 0.345126-3.103289 0.320474 16.070163 187.127467 16.070163 187.127466zM1208.769422 499.205689l21.666134-1.633659s-3.454104-67.318519-4.022045-71.059911c-4.318815-1.077096-25.1904 3.143111-25.1904 3.143111l7.546311 69.550459zM1237.304889 425.088s24.481185 1.09037 27.410015 2.59603c0.933926 5.316267-0.662756 71.843081-0.662756 71.843081s-19.931022-3.730963-24.974222-2.36563c-1.339733-11.804444-1.773037-72.073481-1.773037-72.073481z" fill="#03A5DD" ></path><path d="M1280.348919 314.604089l81.989214-30.592948s-6.122193 244.125393 11.623348 284.505126c58.737778-9.785837 180.494222 18.9696 197.015704 55.68 13.458015 37.937304-32.429511 101.568474-234.338607 111.358103-6.730904-89.332622-7.343407-186.919822-56.289659-420.950281z" fill="#03A5DD" ></path><path d="M1602.341926 704.960474l41.606637-6.119348s-13.457067-178.658607-20.800474-184.164504c-7.344356-5.506844-51.398163 4.894341-54.454993 5.506845-3.062519 0.609659 33.64883 184.777007 33.64883 184.777007zM1563.795911 495.711763l21.41677-3.67123s-9.786785-66.691793-10.708385-70.363022c-4.399407-0.666548-24.7808 5.506844-24.7808 5.506845l14.072415 68.527407zM1585.212681 419.231289s24.474548-1.225007 27.531378 0c1.436444 5.204385 6.1184 71.587081 6.1184 71.587081s-20.192711-1.836563-25.086103 0c-2.448119-11.626193-8.563674-71.587081-8.563675-71.587081z" fill="#03A5DD" ></path><path d="M1624.980859 339.692089s30.593896 152.215704 45.277867 343.852563c18.3552 3.67123 36.711348 0 36.711348 0s-25.697659-335.285096-25.697659-343.852563c0-8.570311-56.291556 0-56.291556 0z" fill="#03A5DD" ></path><path d="M1743.192178 711.156622l41.99917-2.166518s3.453156-179.131733-3.338429-185.306074c-6.793481-6.174341-51.628563 0.023704-54.733749 0.345126-3.103289 0.320474 16.073007 187.127467 16.073008 187.127466zM1724.553481 499.205689l21.668978-1.633659s-3.453156-67.318519-4.02394-71.059911c-4.31597-1.077096-25.192296 3.143111-25.192297 3.143111l7.547259 69.550459zM1753.088 425.088s24.482133 1.09037 27.410015 2.59603c0.939615 5.316267-0.658963 71.843081-0.658963 71.843081s-19.932919-3.730963-24.977067-2.36563c-1.337837-11.804444-1.773985-72.073481-1.773985-72.073481z" fill="#03A5DD" ></path></symbol></svg>',function(l){var t=(t=document.getElementsByTagName("script"))[t.length-1],e=t.getAttribute("data-injectcss"),t=t.getAttribute("data-disable-injectsvg");if(!t){var c,i,n,s,o,a=function(t,e){e.parentNode.insertBefore(t,e)};if(e&&!l.__iconfont__svg__cssinject__){l.__iconfont__svg__cssinject__=!0;try{document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>")}catch(t){console&&console.log(t)}}c=function(){var t,e=document.createElement("div");e.innerHTML=l._iconfont_svg_string_4179815,(e=e.getElementsByTagName("svg")[0])&&(e.setAttribute("aria-hidden","true"),e.style.position="absolute",e.style.width=0,e.style.height=0,e.style.overflow="hidden",e=e,(t=document.body).firstChild?a(e,t.firstChild):t.appendChild(e))},document.addEventListener?~["complete","loaded","interactive"].indexOf(document.readyState)?setTimeout(c,0):(i=function(){document.removeEventListener("DOMContentLoaded",i,!1),c()},document.addEventListener("DOMContentLoaded",i,!1)):document.attachEvent&&(n=c,s=l.document,o=!1,h(),s.onreadystatechange=function(){"complete"==s.readyState&&(s.onreadystatechange=null,d())})}function d(){o||(o=!0,n())}function h(){try{s.documentElement.doScroll("left")}catch(t){return void setTimeout(h,50)}d()}}(window);]]></content>
      
    </entry>
    
    
  
</search>
